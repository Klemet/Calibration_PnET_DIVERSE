{"version":"1","records":[{"hierarchy":{"lvl1":"Some important notions before we start"},"type":"lvl1","url":"/startingcalibrationtest/some-important-notions","position":0},{"hierarchy":{"lvl1":"Some important notions before we start"},"content":"PnET-Succession is a complex ecophysiological model (PnET) that has been further enhanced to work within the framework of LANDIS-II (as a succession extension). This makes it quite complex.\n\nAs I worked to create this document and write a complete guide to calibrate PnET-Succession, many questions arose. Many of these are important enough that I recommend that you engage with them before continuing this guide, as they will most likely influence your decisions moving forward.\n\nMany of the questions and ideas mentioned here might seem overwhelming at first; but you’ll see that we will still end up with some concrete recommendations. In any case, you will get a complete practical example for all the steps of the calibration in the following notebooks, that you will be able to copy or tweak for your own uses.\n\nStill, I highly recommend you consider everything written here before you start, so as to get a good grip of the limitations and justifications behind this calibration method.\n\n","type":"content","url":"/startingcalibrationtest/some-important-notions","position":1},{"hierarchy":{"lvl1":"Some important notions before we start","lvl2":"A quick reminder and summary on how PnET-Succession work."},"type":"lvl2","url":"/startingcalibrationtest/some-important-notions#a-quick-reminder-and-summary-on-how-pnet-succession-work","position":2},{"hierarchy":{"lvl1":"Some important notions before we start","lvl2":"A quick reminder and summary on how PnET-Succession work."},"content":"PnET-Succession works with the following inputs :\n\nA set of LANDIS-II core species parameters (mostly life-history traits about the simulated tree species : seed dispersal distance, longevity, etc.)\n\nA set of PnET-Succession species parameters (all related to the equations of PnET-Succession)\n\nA set of PnET-Succession generic species parameters (species parameters that are the same for all tree species; useful in some cases as we will see)\n\nA set of PnET-Succession generic parameters (other parameters not related to tree species, but to the functioning of PnET-Succession)\n\nAn ecoregion map (given to the LANDIS-II core, but used by PnET-Succession)\n\nFor each ecoregion, a soil type (which represents the texture of the soil and its water-retention capabilities)\n\nFor each ecoregion, a climate data stream (a time series of monthly or daily climate variables, 5 in total)\n\nA map of initial communities (indicating the initial state of your landscape)\n\nAt every timestep, and for every cell of your landscape, PnET-Succession will then simulate the growth of the tree cohorts in the cells on a monthly basis (PnET-Succession works on a monthly basis whatever your timestep is).\n\nEach age cohort is associated to different biomass pools, one of them being the “Non Structural Carbon” pool, representing the resources of the species. If this pool becomes too low, the cohort will die.\n\nThe amount of light and water in the cell for the given month is computed based on the climate data and the soil associated with the ecoregion of the cell, and the other cohorts present in the cell. Cohorts compete for light by taking space in the canopy. The total amount of available light before interception by the canopy is defined by the climate data stream. Precipitations are simulated as a number of separated rain events. A part of the water of each rain event will remain in the soil (depending on its texture), and will then become available for the cohorts (which will compete for the water).\n\nThe photosynthesis of each cohort will be computed based on the amount of water and light available. The photosynthesis is basically computed as a maximum value for the month, and is then reduced by several reduction factors. These can be linked to limitations in water, the competition for light, the temperature, CO2, the ozone (optional), but also by the age of the cohort.\n\nAfter the photosynthesis, the carbon coming from it is allocated in the different pools of the cohort, and the respiration/maintenance of the tree is then computed and subtracted from the pertinent pools.\n\nThe death of an age cohort is thus the dynamic result of several year where photosynthesis is small enough that the Non Structural Carbon pool will get lower and lower (because of the maintenance of the cohorts that becomes uncompensated by its photosynthesis) until death happens. This can be because photosynthesis was limited by a lack of light, a lack of water, temperatures that were too high or too low, or because the cohort was becoming too aged, or from a combination of all of these factors (this last option being the most likely). The growth of the tree cohort can also be limited by all of these factors without them killing the cohort outright.\n\nCohorts can disperse through the usual dispersal algorithms of LANDIS-II, but their establishment is based on the limitations in light and water in the cell of destination.\n\n","type":"content","url":"/startingcalibrationtest/some-important-notions#a-quick-reminder-and-summary-on-how-pnet-succession-work","position":3},{"hierarchy":{"lvl1":"Some important notions before we start","lvl2":"Why do we need to calibrate PnET-Succession? What does calibration mean?"},"type":"lvl2","url":"/startingcalibrationtest/some-important-notions#why-do-we-need-to-calibrate-pnet-succession-what-does-calibration-mean","position":4},{"hierarchy":{"lvl1":"Some important notions before we start","lvl2":"Why do we need to calibrate PnET-Succession? What does calibration mean?"},"content":"\n\nThe short answer\n\nCalibrating means adjusting the model’s parameters to ensure that its outputs are correct in context where we know what they should be.\n\nPnET-Succession is a model where most parameters can be derived directly from empirical values, but it still requires calibration for some of them as biological processes are quite complex. We also need calibration because we want to be extra-sure that the model behaves correctly and for the right reasons since we will be using it to make predictions.\n\nIn ecology, calibrating a model involves adjusting the model’s parameters to ensure that its outputs align closely with real-world observations.\n\nNot all models need to be calibrated, of course. In science, you can find physical models (e.g. \n\nsome climate models) that do not require calibration because their equations replicate the law of physics that drives the processes they are modeling quite perfectly. For these models, we can simply insert empirical values or constants that will drive the processes inside the model, and let things be.\n\nThat’s not the case for a model such as LANDIS-II and PnET-Succession because the processes driving tree growth are much more complex to model than abiotic processes. It’s currently impossible to model the fine physical processes that explain how a tree grows and die; there are too many components interacting together. This makes the elaboration of equations that explain the behaviour of the modeled processes very difficult, because everything becomes extremely contextual. I’m not an expert on these subject; but I find this text about the science of ecology by \n\nSutherland (2013) to be quite a good summary of this issue :\n\nOne explanation of barriers to progress in ecology maintains that it is a science of middle numbers (Allen & Hoekstra 1992).\nIn small-number systems like the solar system, the relationships between the components, and the state of the system, can often be adequately described by a simple set of equations.\nIn contrast, in large-number systems such as chemical interactions in fluids, the behaviour of the system can usually be adequately described using statistical averages because of the large number of components and the simple nature of their interactions.\nEcological systems unfortunately belong to the study of middle numbers: they are too complex to describe individually, yet their components are too few and their interactions too complex to be described by statistical dynamics.\n\nTherefore, the best we can do in forest ecology is making models that contain as much of components of the organisms we are simulating (or their most important components). Then, we make sure that the models behave “like they should” for contexts where we are quite certain of how they should behave. In return, we will hope that this will make the models behave “like they should” in contexts where we are less certain (i.e. when we are making predictions). This, in essence, is calibration.\n\nStill, you are in luck! Because PnET-Succession is a model that was well thought-out enough to reproduce the dynamic of tree growth without too much calibration. This means that many of its parameters can be taken directly from empirical values without further change (as long as these empirical values are available). As \n\nEric Gustafson writes in his calibration tips :\n\nOne of the compelling features of PnET-Succession is that its parameters are mostly empirically estimable values, and it autonomously produces very realistic growth responses under a wide variety of abiotic conditions when its parameters are set correctly. The developers of the PnET model claim (perhaps too optimistically) that PnET does not need calibration because it is completely based on empirically observed inputs (parameters) and relationships (see Aber et al. 1995).\n\nHowever, Eric Gustafson further writes that according to him, some parameters still need some calibrating. These parameters are those related to the photosynthetic capacity, and the ones determining the response of the species to changes in available water and in temperature :\n\n[...] because the model is designed to use empirically known parameters to mechanistically simulate growth and competition based on first principles of physiology, the primary purpose of calibration of PnET-Succession is to get photosynthetic capacity (via Foliar Nitrogen) and amount of foliage correct. A secondary purpose is to calibrate parameters (species and ecoregion) that determine hydrology and response to water and temperature. This means that of the dozens of parameters used by PnET-Succession, very few need calibration, and most applications can use empirically derived (or default) values for most parameters\n\nIn any case, you will want to do some calibration, even if it’s just to be certain that your model produces realistic values. This is because LANDIS-II and PnET-Succession are used for predictive purposes (i.e. predicting how forests will evolve in a given context). As such, you want PnET-Succession to be able to reasonably mimic the way that trees grow and die inside forests so that your LANDIS-II simulation produces outputs that can give you insights about reality. This cannot happen if PnET-Succession does not replicate the way that trees of different species grow and die correctly - and there are a couple of traps that one might fall into that can make that happen.\n\n","type":"content","url":"/startingcalibrationtest/some-important-notions#why-do-we-need-to-calibrate-pnet-succession-what-does-calibration-mean","position":5},{"hierarchy":{"lvl1":"Some important notions before we start","lvl2":"The traps of calibrating PnET-Succession"},"type":"lvl2","url":"/startingcalibrationtest/some-important-notions#the-traps-of-calibrating-pnet-succession","position":6},{"hierarchy":{"lvl1":"Some important notions before we start","lvl2":"The traps of calibrating PnET-Succession"},"content":"The short version\n\nPnET-Succession is so complex that a different set of parameters can lead to the same output. This means that the model can, in some situations, give you the right output for the wrong reasons.\n\nThat is why we’ll try to calibrate PnET-Succession in a way that will ensure as much coherence in our parameter values as we can rather than risking having the right outputs from incorrect values.\n\nIn his calibration tips, Eric Gustafson highlights several “traps” in calibrating a complex model like PnET-Succession. All of them seem to be linked to the problem of equifinity, meaning that in a given context, the model can produce the same results with different parameters (understand : the same results for different reasons).\n\nFor example, PnET-Succession might produce a realistic growth curve for a given tree species you just calibrated for the context of your study area with a set of temperature and precipitations. But it might be because you overestimated its growth with the current temperatures but underestimated its sensitivity to drought. As such, while your result is correct in this situation where both of your errors compensate each other, your modelled tree species will most likely react in un-realistic ways with different conditions of temperature or soil moisture - for example, if climate change impacts your area. This means that PnET-Succession can do the right thing for the wrong reasons in one context, and then do wrong things because of these same wrong reasons in another context.\n\nThis means that doing a “brute-force” calibration is not necessarily a good idea here. Brute-force means testing a lot of combination of parameter values through random permutation until we find a combination that generate a growth curve that seems realistic (as close as possible to our calibration targets). But equifinity implies that there might be several such combinations, and that many might produce the right response for the wrong reasons.\n\nTo avoid these traps, Gustafon’s calibration tips recommend a step-by-step approach where you calibrate the model in a way that ensures that the logic behind the values you are using is sound. For example, tree species with different shade tolerance should have a half-saturation parameter (which is the parameter influencing shade tolerance) that represent this shade tolerance correctly, especially when compared to each other. When a tweak in a parameter is needed, Gustafson recommands doing it in a way that respects the logic of previous tweaks to other parameters - but also the difference in the life strategies of the tree species you are dealing with.\n\n","type":"content","url":"/startingcalibrationtest/some-important-notions#the-traps-of-calibrating-pnet-succession","position":7},{"hierarchy":{"lvl1":"Some important notions before we start","lvl2":"What are we calibrating here? Entire tree species as a whole? Variants? Or phenotypes ?"},"type":"lvl2","url":"/startingcalibrationtest/some-important-notions#what-are-we-calibrating-here-entire-tree-species-as-a-whole-variants-or-phenotypes","position":8},{"hierarchy":{"lvl1":"Some important notions before we start","lvl2":"What are we calibrating here? Entire tree species as a whole? Variants? Or phenotypes ?"},"content":"\n\nThe short answer\n\nPnET-Succession simulates tree species where all individuals of the same species are the same/have the same parameters. But in real life, there are only individual trees that are different from each other, even if they are of the same species. You need to consider this and address it explicitly in your modelling assumption.\n\nYou have the possibility to model “variants” or “phenotypes” using pseudo-species in PnET-Succession to add some variability between trees of the same species. You will have to decide whether you need to do this based on your study area, research question and on the data available to you. But keep in mind that PnET-Succession cannot make these variants/phenotypes reproduce with each other, as they will be considered as separate species inside the model.\n\nIn any case, you should always remember and explicitly indicate that you are simulating an abstraction of many individual trees at once; and that even if you choose to model an entire tree species without simulating variants or phenotypes, you will in the end only represent trees from the area where you empirical data come from, and not necessarily the entire species as a whole (since you’d need worldwide data for that).\n\nThis is a crucial question. While PnET-Succession contains parameters that are not species-specific, most of the parameters we’ll be interested in during the calibration are related to the tree species you will be simulating directly.\n\nBut what are we really creating or replicating here in PnET-Succession? A tree species? A variant inside this species? Or even a given phenotype ? The key problem around these questions is that in nature, the dynamic of a given individual tree is the result of both its genotype/DNA and of its growth history (which might result in different phenotype for a given DNA). In addition, the genotype of trees of the same species might be quite different between two individuals of the same species. What that means is that two individuals of the same tree species might grow differently or respond differently to its environment. Thus, a model trying to represent the growth of these two trees should ideally have a different set of parameters to represent them, so as to properly model their difference in growth.\n\nBut here we arrive at another limit of modelling in forest ecology. While PnET-Succession might be a good model that can produce robust and realistic growth behaviours with a lot of empirical and non-calibrated parameters, it’s still a model that represents entire species. PnET-Succession will, for example, simulate “Abies balsamea”, the balsam fir; but on the ground, in reality, the trees of this species are “a balsam fir”, not “the balsam fir”. Trees are not abstraction of a species as a whole; they are individual with inter-individual and intra-specific differences. But PnET-Succession does work by simulating “species” that are an abstraction.\n\nSo, how do we define this abstraction? How to calibrate a “tree species” while accounting for the fact that there are individual differences between trees of the same species, which we cannot represent in PnET-Succession? Are we supposed to find parameters that represent “the mean” or “the average” of the species in terms of its growth, of the temperatures that it prefers, of its drought tolerance? And how do we get empirical data that represents a “species average”, since all empirical data ultimately come from real individual trees that are not necessarily average? All of these questions are important as they will influence the empirical data you will need for the calibration, as well as the eventual pseudo-species you will define (see below).\n\nAfter thinking long and hard about it, and discussing it with Eric Gustafson and Brian Sturtevant, it looks like the answer to these questions is contextual to your research question. First of all, while PnET-Succession does simulate species rather than individuals, nothing is preventing you from implementing pseudo-species in the model. For example, instead of just having an Abies balsamea, you can have an Eastern Abies balsamea and a Western Abies balseamea  to represent two variants or to phenotypes that are cohabiting in your landscape. Unfortunately, PnET-Succession will not be able to deal with the reproduction between these two variants (they will be considered as two completely distinct species inside the model); but it’s a possibility.\n\nBut ultimately, the choice will depend on three things : your study area, your research question and the availability of data you have.\n\nAre there any variants or phenotypes of a given species that are well-known in your study area ? If yes, you might want to calibrate them separately if you have empirical data or knowledge that can allow you to isolate their behaviour. In particular, you will need empirical growth data (see first step of calibration) and information about the temperature preference and drought tolerance of each phenotype/variant.\n\nIf you don’t have the data to calibrate each phenotype/variant, then you can still try to simulate the entire tree species as a whole. Simply be careful to be completely explicit about this limit in your publications, including in how you will interpret your results.\n\nDoes your research question involves the behaviour of variants or phenotypes for a species ? For example, do you want to try to add “southern variants” in a northern landscape to help forests against climate change ? If so, you’ll have to define variants.\n\nIf you’re lacking empirical data about these variants, you might calibrate them “by hand”, meaning by tweaking the values of some parameters by yourself, not based on any empirical data. For example, you might change the PsnTOpt parameter to change the optimal temperature for photosynthesis; you might increase it by one or two degrees for a southern variant.\n\nEven if you end up simulating only one set of parameters (no variants or phenotypes) for a given species in your study area, be aware that it does not mean that you will be simulating an abstraction of the entire species (i.e. all trees of this species). Depending on the origin and nature of the empirical data that you will use, you will most likely create an abstract entity that represent an average of the trees of the same species only in the area where your empirical data comes from. For example : if you get empirical data from the province of Quebec in Canada to calibrate the species Abies balsamea, keep in mind that what you will have done is represent an abstraction of the Abies balsamea trees in Quebec, and not necesseraly of Abies balsamea as a whole (for the whole world). If you took data from different Canadian provinces, you might get a different set of parameters. The resulting differences might be minimal; but it’s important to be explicit as to what we calibrate, especially because future researchers might use your work in a different study area.\n\nSo once you have answered these questions (wherever you will simulates different variants or phenotypes or not), you will need to choose the origin of your empirical data. Let’s talk about that.\n\n","type":"content","url":"/startingcalibrationtest/some-important-notions#what-are-we-calibrating-here-entire-tree-species-as-a-whole-variants-or-phenotypes","position":9},{"hierarchy":{"lvl1":"Some important notions before we start","lvl2":"What should be the spatial extent of the empirical data (tree growth, parameter values etc.) that I will use for my calibration ?"},"type":"lvl2","url":"/startingcalibrationtest/some-important-notions#what-should-be-the-spatial-extent-of-the-empirical-data-tree-growth-parameter-values-etc-that-i-will-use-for-my-calibration","position":10},{"hierarchy":{"lvl1":"Some important notions before we start","lvl2":"What should be the spatial extent of the empirical data (tree growth, parameter values etc.) that I will use for my calibration ?"},"content":"The short answer\n\nTake in as much data as you can in the species distribution range of your tree species. Then, compare the data from inside or near your study area (if there is any) with the rest of the data you have. Use this comparison to decide where you want to restrict the spatial extent of the data you will take. The idea is to take enough data to capture the behaviour of your tree species and its difference to other tree species; but to stop as soon as you can to limit the amount of different genotypes, phenotypes or variants that are present in your data and that are getting mixed together in the single abstract tree species you are making in PnET-Succession.\n\nIn situations where you lack data, do with what you have unless what you have seems really strange (in particular where comparing data between the different species you want to calibrate). Try to prioritize coherence; for example, if an empirical value of half-saturation for photosynthesis you got for a species clearly does not align with what you know about its shade tolerance (or with the half-saturation values you have with your other species), you might be better off using an arbitrary value that will be more coherent with the logic of PnET-Succession (which is : the half-saturation between your different species should represent their shade tolerance relative to each other).\n\nIn any case, always be explicit and transparent about your choices. Document them as much as you can. They will help you make sense of the outputs of the model, and nuance your conclusions about your results.\n\nThis is again a crucial question. For the calibration, you will need empirical data about the tree growth of each of your species (step 1), about their reactions to changes in temperature and soil water content (step 3 and 4) and also many other parameters that can be derived from empirical values. But you will most certainly find empirical data from inside and outside your study area. What should you choose ? This is especially crucial for the empirical growth data you will require for step 1.\n\nTo make a clear example of the problem, let’s imagine the following situation : we’re making LANDIS-II simulations with PnET-Succession for a landscape in the province of Quebec, Canada. We want to calibrate the parameters of Abies balsamea for this. So we download empirical growth data for this for step 1 of the calibration. But this gives us a choice : we can use empirical data from only Quebec; we can add data from the neighbouring province of Ontario; or we can even take data for all of Canada.\n\nThing is, using data for only Quebec will limit us because we will have less data points. This will increase our uncertainty about the characteristics of the growth of our species that we’re trying to capture for the calibration (especially for rarer tree species !). For example, during step 1 of the calibration, we need a good estimation of the “growth peak” of the species. But are we certain that the Quebec data will properly show the growth peak ? Or maybe it will underestimate it ?\n\nBut using data from surrounding provinces, or even for the whole of Canada, will lead us to approximate the behaviour of this species from an increasing number of individual trees - coming from different biotic and abiotic conditions where they might deal with competition from different species, etc. This means that we are trying to mix more trees, phenotypes or variants (or just differences in external growth conditions that influenced the growth of the trees) into one abstract entity. And while it’s difficult to have a definitive idea of how this will influence the parameters you will have, it’s easy to understand that this might create issues. To get back to our example with the growth peak, let’s say that by taking data for all of Canada, you’re seeing a growth peak that is higher than the one you see if you only look at data from Quebec. Is this higher growth peak pertinent to you ? Maybe it represents the performance of a variant or local genotype that is not in Quebec; or maybe it represents the effect of growth conditions (for example, better temperature or precipitations or soils) that are not present in Quebec. The question remain; should you use this data ?\n\nSo in the end, we have a clear trade-off : the larger the area from which you will take empirical data, the more data you will have to capture the variability in the species’s growth patterns or characteristics - which is great where local data is scarce, or not very well sampled ! But this will come with the problem of potentially misrepresenting the growth of your species in your local context, since you will be using data from very different contexts. As such, you need to have enough data to properly capture your tree species behaviour; but not too much so that you can represent its local behaviour. The best approach is most likely to keep the spatial extent of your empirical data as small as can be, while ensuring you captured enough variability.\n\nBut why do we need local empirical data to calibrate ? Can’t PnET-Succession deal with any provenance of data, as long as we match it with the right climate or soil data ?\n\nA part of you might ask if this problem of needing “local” estimate of our tree species’s performance is a real issue or not. That’s because as PnET-Succession is such a good model, as long as we match the empirical data with the righ context associated with it (e.g. the soils, precipitations, light, competition and everything else), wherever this empirical data comes from, then maybe our calibration will produce the right parameters that will produce realistic outputs ! That basically, the important thing is not to have empirical data that comes from your study area, but rather to match the empirical data with the right context (climate and soils).\n\nA consequence of this idea is that if two researchers try to calibrate the same tree species using empirical data from two far away places (e.g. at the extreme north or south of the species distribution), then as long as they do the calibration right (by pairing this empirical data to the right temperatures, soils and precipitations), then they should get the same parameters ! Another consequence of this idea is that basically, there could be a single set of PnET-Succession parameters for each unique tree species on earth, and that all that PnET-Succession needs to model the growth of a tree species after that is the local context.\n\nI’m of the opinion that this is no true, and for one good reason : the parameters of PnET-Succession are used to represent several characteristics of our tree species (e.g. foliage nitrogen, drought tolerance, etc.) that are well-known to vary between individuals of a same species. If you take two trees of the same species, but one from the northern edge or the species’ distribution and the other from the southern edge, they are bound to be quite different because they grew in different conditions, expressed different genes, and thus had a distinct phenotype. That’s not even mentioning local adaptation in the genotype of a given species, which can also be quite substantial.\n\nThat is why, if two researchers calibrate the same tree species but with data from the northern and southern edges of its distribution, then they’re most likely bound to have different parameters which will represent the variation of the tree’s genotype and phenotype along its range. This is the reason why I recommand to limit the spatial extent of your empirical data as much as possible, so that you avoid mixing data from trees of the same species but that are yet different from one another, but used to generate the a single set of parameters of a single tree species in PnET-Succession. In fact, I’d say that you should expect to find relatively unique parameters for your study area.\n\nOf course, not all of your parameters will be unique; most likely because you will lack data for some of your parameters, and you will need to use what’s available. And maybe you’ll find parameters really close to previously published study. But you should make sure through this calibration.\n\nSo, to what spatial extent should you limit yourself ? I still do not have a clear answer to this question. I believe that this is contextual. Here is what I would recommend :\n\nIf possible, get as much empirical data as you can using national or even international datasets (see further sections for what kind of empirical data you’ll be looking for precisely).\n\nThen, select data from your study area for the species you want to calibrate, and compare (for each species) what you see locally (in your study area) versus what you see globally (in the rest of the dataset). Are there big differences ? For example, are your local values much smaller or bigger than the overall average ? If so, try to identify the reasons that might explain these differences.\n\nIf the reason is that you have only a relatively small amount of data locally (e.g. less than 50 data points to describe the growth of your tree species), then you have a good reason to take data from an extended spatial range. Try to extend until you reach a satisfactory amount (e.g. more than 100), or until you see a clear pattern emerging in your data. Be on the lookout for bimodal distributions or other patterns that might indicate that the data you’re adding might be representing a population of trees with relatively different caracteristics (even if they are of the same species).\n\nIf the reason is that the distribution or average that you see between the local data and the more global data is different, then you might be looking at differences in genotypes, phenotypes or variants that are present in your data. If that’s the case, I recommend again that you take the least amount of data as possible that focuses on your study area or its surrounding. If you still see multi-modal distributions or strange patterns in your data, you might be looking at variants or phenotypes inside your study area. You will then be able to decide if you want to simulate them individually (see previous sections).\n\nBeing explicit and transparent about your choices of data, per \n\nReese et al., 2024.\n\nWhatever data and spatial extent for your data you choose, you choose be completely transparent about this choice in the methodology section of your publications..\n\nReese et al., 2024 provides a good step-by-step for communicating the assumptions and hypothesis surrounding your calibration, with some direct examples for LANDIS-II studies in the supplementary material (e.g. see Supp. Mat. A.).\n\nTo take again the example from the beginning of this section : let say I choose to take empirical growth data from both Ontario and Quebec (even though my study area is in Quebec and not in Ontario) for a given species. I choose this because the species I’m calibrating is relatively rare in Quebec, and there was more data in Ontario showing a more complete growth pattern than just the data of Quebec.\n\nI could write in my publication :\n\nFor Abies balsamea, we chose to include empirical growth data from both Ontario and Quebec for our first calibration step. This is because the data in Quebec was sparse, and adding the data from Ontario showed a clearer growth pattern that served as a better target for our calibration step. Ontario is near Quebec, and the two provinces have similar climates in some locations. However, we do ackowledge that differences might exists in trees of Abies balsamea between the two provinces, and in the contexts (climate, soil) that shaped them. Still, we make the assumption that these differences are small enough to warrant using data from Ontario to calibrate our species for our study area in Quebec, and that they will not lead to important effects on the outcomes of our simulation.\n\nThat way, the choice I made (using data from both Ontario and Quebec), the reason of my choice (not enough data in Quebec), and the assumption behind my choice (data from Ontario will not affect results too much) are clearly explained. This will help the interpretation of my results, and it will also help future modellers that might want to use the parameters resulting from my calibration.\n\nNow that you’ve acquired your empirical data, there is only one question left : how to find the climate data to match it.\n\n","type":"content","url":"/startingcalibrationtest/some-important-notions#what-should-be-the-spatial-extent-of-the-empirical-data-tree-growth-parameter-values-etc-that-i-will-use-for-my-calibration","position":11},{"hierarchy":{"lvl1":"Some important notions before we start","lvl2":"What should be the spatial extent of my climate data during the calibration?"},"type":"lvl2","url":"/startingcalibrationtest/some-important-notions#what-should-be-the-spatial-extent-of-my-climate-data-during-the-calibration","position":12},{"hierarchy":{"lvl1":"Some important notions before we start","lvl2":"What should be the spatial extent of my climate data during the calibration?"},"content":"The short answer\n\nYou empirical data most likely comes from very different places. Therefore, you cannot choose a single spatial origin for your climate data that will match your empirical data. In addition, doing many simulations with many different climate data stream of different spatial origin will most likely be way too complex to calibrate the model.\n\nI recommend that the climate data stream that you will use will depend on the calibration step, but that it will most likely be a single one that you will use in many cases. For step 1, it should be a yearly constant (but still changing monthly) climate data stream based on where your empirical growth peak and maximal grow speed is observed. For step 2, it can be the same as for step 1. For step 3, it can also be the same as for step 1. For step 4, you should have several climate stream with different temperatures but similar precipitations; you can build them by hand by changing the temperatures in the climate data stream you used for step 1.\n\nCalibration means making simulations to tweak the parameters of the model until you get the expected output in a situation where you know what the output should be. But that’s the thing : what climate data should you give to these simulations? Remember that PnET-Succession requires 5 climate variables (Monthly minimum temperature; monthly maximum temperature; monthly sum of precipitations; monthly averaged daytime photosynthetically active radiation ; and CO2 concentration). Let’s call these datasets “climate data stream”, which are a time series of all climate variable necessary for PnET-Succession for one location, or one cell of the landscape. Indeed, you probably gathered empirical data from a large area (or even a reasonably-size landscape) for the calibration; but that means that a lot of different local climate data streams will be associated with your overall empirical data. Which one should you choose ?\n\nTo give a more practical example, let’s imagine we have empirical data to calibrate Abies balsamea :\n\nFoliar nitrogen comes from measures taken in Minnessota\n\nTree growth data comes from sample plots in all of Quebec and Ontario\n\nRight here, you already have a lot of different climate involved, that are associated to each of the unique entries in those datasets. Which one should you choose? Northern USA? Quebec? Ontario? And where in Quebec and Ontario exactly?\n\nYou could, of course, do a lot of simulations with a different climate data stream every time (e.g. one simulation with climate from the USA, one from Quebec, one from Ontario; maybe several more with different climate streams for each region). You could also calibrate using many cells in your simulation where each cell have a different climate. But I don’t think it would solve the problem, since different pieces of your empirical data might come from different places (e.g. you took Foliar nitrogen values from the only place it was available, and your tree growth data for someplace else entirely). You will therefore always have a mismatch between the climate data of any of your simulations and the one that is associated a certain parts of the empirical data you have. Plus, this would take a lot of time to do, and to interpret. And your time is limited.\n\nThe ideal configuration would be that you would have an enormous amount of empirical data and measures for all of your tree species for each of the cells of your study area. Then, you’d make a calibration spanning every type of possible climate data variation in your study area, matching the right origin/cell of empirical data spatially with the right climate data stream. And thus, you’d end up with a calibration where you have to tweak parameters in order to satisfy hundred of thousands (if not millions) of calibration targets, one for each cell of your landscape. While technologies have massively improved the amount of data available, we’re not there yet; and I’m not sure our human brains can deal with such a complex calibration.\n\nSo here, we’re trying to have one or several calibration targets, which means only a couple of climate data streams at the most. That gets us back to the question : what climate data stream to choose, if our empirical data comes from many different places ?\n\nIn the end, the climate data stream you will choose will depend on the calibration step you are in. I will give some propositions here. In any case, I recommand that you duly note and recognize the assumption that the climate data stream you will choose (e.g. from this place in Ontario, or this other place in Quebec, etc.) is adapted to the calibration step you are dealing with. It will remain an assumption, because we can hardly prove it for sure. Remember to document this assumption and communicate it properly in your publications (see previous section).\n\nIn calibration step 1, you will need an “ideal climate” in order to match the best possible growth peak and initial growth seen in your empirical growth data. Therefore, the idea here is to get a climate data stream that is a pretty good match to the conditions that created these upper-bound growth performance for your tree species. To do this, here are some recommendations to create your climate data stream :\n\nIn his calibration tips, Eric Gustafson recommends using a “constant” climate data stream, meaning it’s the same climate every year (although the climate changes every month). This avoids the confounding effect of “extreme” events, and thus allows you to better interpret what you’re doing during the calibration phase.\n\nYou could try to identify what is the precise place in space that is associated with your empirical growth data, and in particular where does the data that show the growth peak come from. Once you have narrowed down the place in space in question, you can gather one or several climate data streams from this place and average them both spatially and temporally. This should give you a constant climate data stream (see previous point) where each value is the average of the different climate data stream or climate grid cells or climate station data you have acquired for the area.\n\nIf the empirical growth data you’re using for step 1 is not associated to a particular place in space but rather to a large spatial extent or to an relatively abstract concept (e.g. you are using agrowth curve generated from a model like the Forest Vegetation Simulator; see next pages of this guide), then I would recommand that you get a climate data stream from a place in the large spatial extent where the tree species in question thrives the most. The idea is that the climate associated to the places where your species thrives the most should be one of the best climate for the species in this spatial extent.\n\nFor calibration step 2, the climate stream is less important - since you’ll be interested in looking at how your tree species compete for light with each other. I recommend you use the climate data stream - or one of them if you have several - that you used for step 1.\n\nFor calibration step 3, we’re interested in the effect of adding or restricting water in the soils. This can be done without changing the climate data stream from step 1 and step 2, and simply by changing the soils (which will alter the water retention of the soil). Therefore, I recommend again that you use the same climate data stream as for step 1.\n\nFor calibration step 4, we’re interested in the effect of temperature. In this case, you’ll have to develop several climate data stream where temperature changes. Ideally, the precipitations should remain the same - so that you can isolate the effect of temperature and drought/water restriction. You can use the same location of the climate data stream from step 1, but then take predictions under several RCP or SSP climate change scenarios with different temperatures - all the while keeping the precipitation similar to your historical data. You can also manually edit your climate data stream to increase or decrease your temperatures while keeping precipitations similar.\n\nI expect that by following these advice, you will have something that is ultimately imperfect, but still sufficient to obtain climate data that are pertinent to the goals of the calibration.","type":"content","url":"/startingcalibrationtest/some-important-notions#what-should-be-the-spatial-extent-of-my-climate-data-during-the-calibration","position":13},{"hierarchy":{"lvl1":"Loading functions and packages"},"type":"lvl1","url":"/startingcalibrationtest/loading-functions","position":0},{"hierarchy":{"lvl1":"Loading functions and packages"},"content":"The following code sections are used to load the different functions I wrote to be able to parse, edit, write parameter for small LANDIS-II PnET simulations; but also to read the outputs and plot them. These functions are essential to automatise the calibration process used in this repository, so be sure to load them.\n\nThe functions are written in the file \n\nfunctionsForCalibration.py.\n\nTip\n\nIf you’re missing a package in the docker image that you want to use, add it to Clean_Docker_LANDIS-II_8_AllExtensions_PnETCalibration\\files_to_help_compilation\\pip_requirements.txt and rebuild this docker image.\n\nYou can also let pip choose the right version and then “freeze” it by installing the package in the interactive console of the docker image (just stop jupyter lab beforehand), then use pip install MyPackageName, then use pip freeze to output the package list with the version names. You can then just copy paste the output of pip freeze in the pip_requirements.txt file and rebuild the image.\n\nImportant\n\nAll functions have a docstring that you can read with help(<Name of the function>) ! Use it if you’re lost.\n\n# Loading functions\nfrom functionsForCalibration import *\nimport shutil","type":"content","url":"/startingcalibrationtest/loading-functions","position":1},{"hierarchy":{"lvl1":"Making a test simulation to get used to the functions"},"type":"lvl1","url":"/startingcalibrationtest/test-sim-functions","position":0},{"hierarchy":{"lvl1":"Making a test simulation to get used to the functions"},"content":"If you want to get used to the functions loaded in the previous section, so you can test them here.\n\nThis section :\n\nLoads all of the parameters from a very simple one-cell simulation folder taken from the GitHub repository of the PnET Succession Extension (in StartingCalibrationTest/SimulationFiles/PnETGitHub_OneCellSim_v8) into Python objects\n\nWrites all of these parameters from the Python objects and back into LANDIS-II parameters files in /tmp/TestScenarioPnET, also copying the files that are not parsed (e.g. raster files) in the process.\n\nRuns the simulation (using the LANDIS-II installation that is inside this docker image)\n\nParses the outputs of the simulation (the rasters made with PnEt Output extension and the .csv files made with the PnET Site Output extension)\n\nPlot the outputs\n\nTip\n\nIf you don’t want to test these functions, simply leave this section collapsed and go to the next page.\n\n","type":"content","url":"/startingcalibrationtest/test-sim-functions","position":1},{"hierarchy":{"lvl1":"Making a test simulation to get used to the functions","lvl2":"Loading functions"},"type":"lvl2","url":"/startingcalibrationtest/test-sim-functions#loading-functions","position":2},{"hierarchy":{"lvl1":"Making a test simulation to get used to the functions","lvl2":"Loading functions"},"content":"\n\nfrom functionsForCalibration import *\nimport shutil\n\n","type":"content","url":"/startingcalibrationtest/test-sim-functions#loading-functions","position":3},{"hierarchy":{"lvl1":"Making a test simulation to get used to the functions","lvl2":"Loading all of the parameters from the simple one-cell sim"},"type":"lvl2","url":"/startingcalibrationtest/test-sim-functions#loading-all-of-the-parameters-from-the-simple-one-cell-sim","position":4},{"hierarchy":{"lvl1":"Making a test simulation to get used to the functions","lvl2":"Loading all of the parameters from the simple one-cell sim"},"content":"\n\nPnETGitHub_OneCellSim = parse_All_LANDIS_PnET_Files(r\"./SimulationFiles/PnETGitHub_OneCellSim_v8\")\nprint(\"\\n\\n\\nHere is the big dictionnary with all of the parameters in it :\\n\\n\" + str(PnETGitHub_OneCellSim))\n\n","type":"content","url":"/startingcalibrationtest/test-sim-functions#loading-all-of-the-parameters-from-the-simple-one-cell-sim","position":5},{"hierarchy":{"lvl1":"Making a test simulation to get used to the functions","lvl2":"Testing the writing of all the files in a test folder"},"type":"lvl2","url":"/startingcalibrationtest/test-sim-functions#testing-the-writing-of-all-the-files-in-a-test-folder","position":6},{"hierarchy":{"lvl1":"Making a test simulation to get used to the functions","lvl2":"Testing the writing of all the files in a test folder"},"content":"\n\ntestScenarioPath = \"/tmp/TestScenarioPnET/\"\n\n# We create the folder\nif not os.path.exists(testScenarioPath):\n    os.mkdir(testScenarioPath)\nelse:\n    shutil.rmtree(testScenarioPath)\n    os.mkdir(testScenarioPath)\n\nwrite_all_LANDIS_files(testScenarioPath,\n                       PnETGitHub_OneCellSim,\n                       True)\n\n","type":"content","url":"/startingcalibrationtest/test-sim-functions#testing-the-writing-of-all-the-files-in-a-test-folder","position":7},{"hierarchy":{"lvl1":"Making a test simulation to get used to the functions","lvl2":"Running the simulation - and priting the log"},"type":"lvl2","url":"/startingcalibrationtest/test-sim-functions#running-the-simulation-and-priting-the-log","position":8},{"hierarchy":{"lvl1":"Making a test simulation to get used to the functions","lvl2":"Running the simulation - and priting the log"},"content":"\n\nrunLANDIS_Simulation(\"/tmp/TestScenarioPnET/\",\n                     \"scenario.txt\",\n                    True)\n\n","type":"content","url":"/startingcalibrationtest/test-sim-functions#running-the-simulation-and-priting-the-log","position":9},{"hierarchy":{"lvl1":"Making a test simulation to get used to the functions","lvl2":"Parsing all of the outputs"},"type":"lvl2","url":"/startingcalibrationtest/test-sim-functions#parsing-all-of-the-outputs","position":10},{"hierarchy":{"lvl1":"Making a test simulation to get used to the functions","lvl2":"Parsing all of the outputs"},"content":"\n\n# This dictionnary associates the different output with a keyword that tells us if we should skip it during parsing,\n# or sum it, or average it in the raster maps - depending on what makes the most sense for the output.\n# The biomassSum keyword is special : it will instruct the function to transform the biomass output that is expressed as a function\n# of area (almost always g/m2) into an \"absolute\" amount of biomass (not dependant on the area). Will depend on the size of the\n# landscape.\n# The second keyword associated with the output is the unit that we want to obtain in the end; it will be used to make the\n# labels in the figures with the outputs afterwards.\n# WARNING : The names here must have the same name as the output folder for each variable, as that's how the detection is done.\n# For example : if the LAI rasters are in a folder named LeafAreaIndex, then the keyword must be \"LeafAreaIndex\"\noutputsUnitDict = {\"AETAvg\":[\"average\",\"mm of water\"], # AETAvg is average monthly actual evapotranspiration across the last 12 months of the timestep\n                   \"AgeDistribution\":[\"sum\",\"Number of cohorts in the landscape\"], # Unique age cohorts in each cell\n                   \"AnnualPsn\":[\"average\",\"Photosynthesis (g/m2)\"], # Sum of monthly net photosynthesis)\n                   \"CohortsPerSpecies\":[\"sum\", \"Number of cohorts in the landscape\"], # Cohort of species in each cell\n                   \"Establishment\":[\"categorial\",\"Skipped\"], # Values: 0 = No Presence, 1 = Continued Presence. 2 = Discontinued Presence, 3 = New Presence. Categorical, so no sum or average, is just skipped.\n                   \"EstablishmentProbability\":[\"average\", \"Average establishment probability in the landscape\"], # Average values of cells for a species accross all month of a year.\n                   \"FoliageBiomass\":[\"biomassSum\", \"Mg (tons) of foliage biomass in the landscape\"], # Averaged because it is expressed in g/m2. Multiply by landscape size to get landscape  data.\n                   \"FoliageSenescence\":[\"average\", \"Mg (tons) of foliage dead during time step\"], # Amount of foliage biomass added to litter dead pool, in g/m2\n                   \"LeafAreaIndex\":[\"average\", \"Average m2 leaf / m2 ground in the landscape\"], # LAI expressed as m2 leaf / m2 ground. By averaging, we get the LAI accross the landscape.\n                   \"MonthlyFolResp\":[\"monthly\", \"Skipped\"], # Monthly data are harder to read and are skipped for now.\n                   \"MonthlyGrossPsn\":[\"monthly\", \"Skipped\"], # Monthly data are harder to read and are skipped for now.\n                   \"MonthlyNetPsn\":[\"monthly\", \"Skipped\"], # Monthly data are harder to read and are skipped for now.\n                   \"MonthlyMaintResp\":[\"monthly\", \"Skipped\"], # Monthly data are harder to read and are skipped for now.\n                   \"NSC\":[\"biomassSum\", \"Mg (tons) of NSC in the landscape\"], # Non Structural Carbon, in g/m2.\n                   \"PET\":[\"sum\", \"mm of water evaporated accross the landscape\"], # Evapotranspiration in mm\n                   \"RootBiomass\":[\"biomassSum\", \"Mg (tons) of dried root biomass in the landscape\"], # Root biomass in grams of dried weight / m2\n                   \"SubCanopyPAR\":[\"average\", \"W/m2 or mmol/m2\"], # Photosynthetic radiation under the canopy, in W/m2 or mmol/m2 depending on inputs.\n                   \"Water\":[\"average\", \"cm / m averaged acrossed the landscape\"], # Water in the cell ? Not sure, not very well explained in user guide. cm / m...of soil ? \n                   \"WoodBiomass\":[\"biomassSum\", \"Mg (tons) of woody biomass in landscape\"], #Biomass of abovegroud wood (without foliage)\n                   \"WoodyDebris\":[\"biomassSum\", \"Mg (tons) of woody debris in landscape\"], # Woody debries in g/m2.\n                   \"WoodySenescence\":[\"biomassSum\", \"Mg (tons) of wood dead during time step\"] # Quantity of wood adead to the woody dead pool, in g/m2.\n                   }\n\n# Parsing the rasters and site outputs\nspecies_list = ['AllSpecies', 'pinubank', 'querrubr']\nresult_Rasters = parse_outputRasters_PnET(\"/tmp/TestScenarioPnET/output\",\n                                      species_list,\n                                     outputsUnitDict,\n                                     int(PnETGitHub_OneCellSim[\"scenario.txt\"][\"CellLength\"]),\n                                     PnETGitHub_OneCellSim[\"ecoregion.img\"])\n\nresult_sitesCSV = parse_CSVFiles_PnET_SitesOutput(\"/tmp/TestScenarioPnET/Output/Site1\",\n                                                  int(PnETGitHub_OneCellSim[\"pnetsuccession.txt\"][\"StartYear\"]))\n\n\n\n","type":"content","url":"/startingcalibrationtest/test-sim-functions#parsing-all-of-the-outputs","position":11},{"hierarchy":{"lvl1":"Making a test simulation to get used to the functions","lvl2":"Plotting the content of the raster outputs from PnET Biomass Output"},"type":"lvl2","url":"/startingcalibrationtest/test-sim-functions#plotting-the-content-of-the-raster-outputs-from-pnet-biomass-output","position":12},{"hierarchy":{"lvl1":"Making a test simulation to get used to the functions","lvl2":"Plotting the content of the raster outputs from PnET Biomass Output"},"content":"\n\nplot_TimeSeries_RasterPnETOutputs(result_Rasters,\n                                  outputsUnitDict,\n                                  int(PnETGitHub_OneCellSim[\"biomass.outputPnET.txt\"][\"Timestep\"]),\n                                  int(PnETGitHub_OneCellSim[\"scenario.txt\"][\"Duration\"]))\n\n\n","type":"content","url":"/startingcalibrationtest/test-sim-functions#plotting-the-content-of-the-raster-outputs-from-pnet-biomass-output","position":13},{"hierarchy":{"lvl1":"Making a test simulation to get used to the functions","lvl2":"Plotting the content of the csv outputs from PnET Sites Output for one age cohort"},"type":"lvl2","url":"/startingcalibrationtest/test-sim-functions#plotting-the-content-of-the-csv-outputs-from-pnet-sites-output-for-one-age-cohort","position":14},{"hierarchy":{"lvl1":"Making a test simulation to get used to the functions","lvl2":"Plotting the content of the csv outputs from PnET Sites Output for one age cohort"},"content":"\n\nplot_TimeSeries_CSV_PnETSitesOutputs(list(result_sitesCSV.values())[0],\n                                     referenceDict = {\"Wood(gDW)\":{\"Time\":[0, 10, 20, 30, 40, 50], \"Values\":[3, 3, 4, 5, 6, 4]}},\n                                     columnToPlotSelector = [\"Wood(gDW)\"],\n                                     trueTime = False,\n                                     realBiomass = True,\n                                     cellLength = int(PnETGitHub_OneCellSim[\"scenario.txt\"][\"CellLength\"]))","type":"content","url":"/startingcalibrationtest/test-sim-functions#plotting-the-content-of-the-csv-outputs-from-pnet-sites-output-for-one-age-cohort","position":15},{"hierarchy":{"lvl1":"Initial species parameters"},"type":"lvl1","url":"/startingcalibrationtest/initial-species-parameters","position":0},{"hierarchy":{"lvl1":"Initial species parameters"},"content":"In the \n\ncalibration plan, I propose we start either with the parameter values for the type of shade tolerant species proposed in the \n\nGustafson and Miranda (2023) (Table 1 page 74), or with parameter values extracted from the litterature.\n\nTip\n\nIf you cannot find good empirical values or studies related to the parameters of your species, the calibration tips in \n\nGustafson and Miranda (2023) give a lot of suggestion for initial parameter values.\n\nHere, I describe how/from where I obtained these initial parameter values that serve as the basis of the calibration.\n\n","type":"content","url":"/startingcalibrationtest/initial-species-parameters","position":1},{"hierarchy":{"lvl1":"Initial species parameters","lvl2":"What parameters are we talking about here, and what are the different categories of parameters ?"},"type":"lvl2","url":"/startingcalibrationtest/initial-species-parameters#what-parameters-are-we-talking-about-here-and-what-are-the-different-categories-of-parameters","position":2},{"hierarchy":{"lvl1":"Initial species parameters","lvl2":"What parameters are we talking about here, and what are the different categories of parameters ?"},"content":"\n\nIn this page, we will talk about :\n\nCore species parameters : The species parameters used by the LANDIS-II core (e.g. Longevity, dispersal distance, etc.). These will go in the “core” species parameter file for LANDIS-II (indicated in the main scenario file).\n\nPnET species parameters : The species parameters used by PnET Succession that will vary between species. These will go into the species parameters file of PnET Succession.\n\nPnET generic species parameters : The species parameters used by PnET Succession that we will keep constant between species. These will go into the generic parameter file of PnET Succession. See below for recommendations on which parameters to put in this category.\n\nPnET generic parameters : Other generic parameters of PnET Succession that are not related to species, but that are still crucial for the functionning of PnET Succession (PARunits, PrecipEvents, etc.).\n\nWhy should some species parameters be “generic” and constant accross species in PnET Succession ?\n\nGustafson and Miranda (2023) advises that several species parameters should be used as generic species parameters, meaning that their value should be the same between species, in order to facilitate the comprehension of competition processes. Quoting from them :\n\nUse the GenericPnETSpeciesParameters file for all parameters that are not varied among species.  Set parameters that will be held constant for your particular experiment or study (e.g., MaintResp, InitialNSC, etc.)\n\nParameters that the model is highly sensitive to (for which common values should be used as much as possible) include: MaintResp, AmaxA, AmaxB, k, and FracBelowG.\n\nMinimizing species differences in parameters such as SLWDel, PsnAgeRed, k, MaintResp, DNSC and FracBelowG, will make competitive interactions more predictable.  Hold these as close to each other as possible, varying other parameters to calibrate as much as possible within empirical limits.\n\nWhich PnET species parameters should be generic ?\n\nThe choice depends on your species. As recommanded above by \n\nGustafson and Miranda (2023), using as many parameters as you can as constant and generic accross species will make competition and other processes in PnET Succession easier to interpret and understand. But sometimes, you will have to change these parameters between species so as to properly represent their differences.\n\nHere, I will start with the recommandations of \n\nGustafson and Miranda (2023) and make MaintResp, InitialNSC, k, FracBelowG, PsnAgeRed, DNSC similar between species. SLWDel, k, AmaxA and AmaxB will not be generic as they have to vary at least between evergreen and deciduous according to \n\nGustafson and Miranda (2023).\n\nThe rest of the species parameters (see \n\nhere for a full list) like FolN, SLWmax, TOFol, TORoot, TOWood, HalfSat, H1, H2, H3, H4, LeafOnMinT, PsnTMin, PsnTOpt, EstMoist, EstRad, FracFol, FrActWd, SLWDel, k, AmaxA and AmaxB will change by species or by growth form/strategy (e.g. shade tolerant, etc.). Optional parameters (such as PsnTMax, ColTol, MaxLAI, etc.) will not be considered here.\n\n","type":"content","url":"/startingcalibrationtest/initial-species-parameters#what-parameters-are-we-talking-about-here-and-what-are-the-different-categories-of-parameters","position":3},{"hierarchy":{"lvl1":"Initial species parameters","lvl2":"Sources of parameter values"},"type":"lvl2","url":"/startingcalibrationtest/initial-species-parameters#source-param-values","position":4},{"hierarchy":{"lvl1":"Initial species parameters","lvl2":"Sources of parameter values"},"content":"\n\nSeveral sources and references for parameter values will be considered here. I assign to them a number that is indicative of their pertinence related to our study (1 = highest pertinence), and so the priority in which the source will be used to take the initial parameters for the calibration.\n\n(1) \n\nGustafson and Miranda (2023) (the PnET v5.1 user guide, which contains many parameter values recommanded by Eric Gustafson, especially initial values to be used as starting points; see Table 1 page 74 for initial values, or pages 78-79; or pages 80-82 for calibrated values in of northern Wisconsin)\n\nOther recommendations of \n\nGustafson and Miranda (2023)  :\n\n(4) \n\nAber et al. (1996) : Fig 2 shows the relationship between Lean nitrogen concentration (in % of dry weight) and the parameter AmaxA from PnET.\n\nSome PnET parameters (e.g., SLWDel, AmaxA, AmaxB, Q10, DVPD1, DVPD2) are hard to estimate and most studies use generic values (e.g., (5) \n\nAber et al. 1995, Table 2, (6) \n\nOllinger and Smith 2005, Table 1).\n\n(7) To calibrate the biomass of roots (via TORoot, FracBelowG), see the estimates of whole tree biomass of \n\nSmith et al. 2006\n\nMore recent articles about PnET-II :\n\n(8) \n\nSuárez-Muñoz1 et al. 2021 : calibration of PnET Succession in an European context. No north america species, though.\n\nNo others ? Not a lot of articles; and doesn’t seem like I’ll get better initial params.\n\nFor Quebec,\n\n(2) Data from \n\nMina et al. 2021 (also used in \n\nMina et al. 2022). All parameters used are on \n\nthis Github repository. ⚠️ These parameters are for PnET Succession 3.5. According to \n\nGustafson and Miranda (2023), several parameters (not precised) need recalibration after version 5.0; therefore, these parameters cannot be used “as is” with v.5.1, even though they are for Quebec.\n\n(3) Data from \n\nAmeray et al. 2023. All parameters used are on \n\nthis Github repository. ⚠️ These parameters are for PnET Succession 4.1. According to \n\nGustafson and Miranda (2023), several parameters (not precised) need recalibration after version 5.0; therefore, these parameters cannot be used “as is” with v.5.1, even though they are for Quebec.\n\n","type":"content","url":"/startingcalibrationtest/initial-species-parameters#source-param-values","position":5},{"hierarchy":{"lvl1":"Initial species parameters","lvl2":"Core species parameters for the species"},"type":"lvl2","url":"/startingcalibrationtest/initial-species-parameters#core-species-parameters-for-the-species","position":6},{"hierarchy":{"lvl1":"Initial species parameters","lvl2":"Core species parameters for the species"},"content":"\n\nThese parameters are needed by all LANDIS-II extensions. They will not be calibrated, as they are all species life-history traits that are well defined in the litterature.\n\nI still indicate them here, as some of them will interact with the calibration that we’re doing in this documentation.\n\nExponents are the sources with the same numbers as noted in \n\nSources of parameter values.\nWARNING : If you edit this table, always put any commentaries following the value of the parameter inside parenthesis. This is because we use some Python functions later to read this markdown cell and extract all of the parameter values from this table, to put it into a Python dictionnary that we can then use to interact with LANDIS-II scenarios. Parenthesis and square braquets are ignored, which help the function get the right values for the parameters.\n\nAlso, always separate the value from parenthesis or square braquets with a space\n\nIn short, don't do :\n7[^1]\n7, comes from this source\n7; comes from this source\n\nDo :\n7 [^1]\n7 (Comes from this source)\n7 (because of this reason) [^1]\n\nAlso : Here, the name of the columns must be the exact same as write_LANDIS_SpeciesCoreFile in functionsForCalibration.py.\n\nUPDATE : Shade tolerance and fire tolerance have both been removed with the switch to LANDIS-II v8, as they are not used as core parameters anymore \n\n\nSpecies Name\n\nLongevity\n\nSexual Maturity\n\nSeed Dispersal Distance - Effective\n\nSeed Dispersal Distance - Maximum\n\nVegetative Reproduction Probability\n\nSprout Age - Min\n\nSprout Age - Max\n\nPost Fire Regen\n\nAbies balsamea\n\n200 \n\n25 \n\n30 \n\n160 \n\n0 \n\n0 \n\n0 \n\nnone \n\nAcer rubrum\n\n235 \n\n5 \n\n100 \n\n200 \n\n0.75 \n\n0 \n\n150 \n\nnone\n\nPicea mariana\n\n215 \n\n30 \n\n79 \n\n158 \n\n0 \n\n0 \n\n0 \n\nnone\n\nMina et al. 2021 : \n\nGithub repo\n\n","type":"content","url":"/startingcalibrationtest/initial-species-parameters#core-species-parameters-for-the-species","position":7},{"hierarchy":{"lvl1":"Initial species parameters","lvl2":"Initial generic parameters for the species"},"type":"lvl2","url":"/startingcalibrationtest/initial-species-parameters#initial-generic-parameters-for-the-species","position":8},{"hierarchy":{"lvl1":"Initial species parameters","lvl2":"Initial generic parameters for the species"},"content":"\n\nHere is a table of species parameter values for the parameters that will be kept as generic (MaintResp, InitialNSC, FracBelowG, PsnAgeRed, DNSC, DVPD1, DVPD2, BFolResp, Q10, FolLignin, CFracBiomass) between species.\n\nExponents are the sources with the same numbers as noted in \n\nSources of parameter values.\nWARNING : If you edit this table, always put any commentaries following the value of the parameter inside parenthesis. This is because we use some Python functions later to read this markdown cell and extract all of the parameter values from this table, to put it into a Python dictionnary that we can then use to interact with LANDIS-II scenarios. Parenthesis and square braquets are ignored, which help the function get the right values for the parameters.\n\nAlso, always separate the value from parenthesis or square braquets with a space\n\nIn short, don't do :\n7[^1]\n7, comes from this source\n7; comes from this source\n\nDo :\n7 [^1]\n7 (Comes from this source)\n7 (because of this reason) [^1]\n\n\nMaintResp\n\nInitialNSC\n\nFracBelowG\n\nPsnAgeRed\n\nDNSC\n\nDVPD1\n\nDVPD2\n\nBFolResp\n\nQ10\n\nFolLignin\n\n0.002 \n\n7 \n\n0.35 (average among species in  and )\n\n5 \n\n0.05 \n\n0.05 \n\n2 \n\n0.1 \n\n2 \n\n0.2 \n\nGustafson and Miranda (2023)\n\nAmeray et al. 2023 : \n\nGithub repo\n\nMina et al. 2021 : \n\nGithub repo\n\n","type":"content","url":"/startingcalibrationtest/initial-species-parameters#initial-generic-parameters-for-the-species","position":9},{"hierarchy":{"lvl1":"Initial species parameters","lvl2":"Initial species parameters"},"type":"lvl2","url":"/startingcalibrationtest/initial-species-parameters#initial-species-parameters","position":10},{"hierarchy":{"lvl1":"Initial species parameters","lvl2":"Initial species parameters"},"content":"\n\nHere is a table of initial values (values we will start with for the calibration) for the parameters that will vary among species (FolN, SLWmax, MaxLAI, TOFol, TORoot, TOWood, HalfSat, H1, H2, H3, H4, LeafOnMinT, PsnTMin, PsnTOpt, 20k, EstMoist, EstRad, FracFol, FrActWd, SLWDel, k, KWdLit, AmaxA and AmaxB).\n\nExponents are the sources with the same numbers as noted in \n\nSources of parameter values.\n\nImportant\n\nAs per \n\nGustafson and Miranda (2023) : “It is more important to set FolN to represent photosynthetic capacity relative to other species than to match empirical observations (because the model uses FolN as a proxy for photosynthetic capacity).”.\nWARNING : If you edit this table, always put any commentaries following the value of the parameter inside parenthesis. This is because we use some Python functions later to read this markdown cell and extract all of the parameter values from this table, to put it into a Python dictionnary that we can then use to interact with LANDIS-II scenarios. Parenthesis and square braquets are ignored, which help the function get the right values for the parameters.\n\nAlso, always separate the value from parenthesis or square braquets with a space\n\nIn short, don't do :\n7[^1]\n7, comes from this source\n7; comes from this source\n\nDo :\n7 [^1]\n7 (Comes from this source)\n7 (because of this reason) [^1]\n\n\nSpecies\n\nFolN\n\nSLWmax\n\nTOFol\n\nTORoot\n\nTOWood\n\nHalfSat\n\nH1\n\nH2\n\nH3\n\nH4\n\nLeafOnMinT\n\nPsnTMin\n\nPsnTOpt\n\nk\n\nEstMoist\n\nEstRad\n\nFracFol\n\nFrActWd\n\nSLWDel\n\nAmaxA\n\nAmaxB\n\nKWdLit\n\nCFracBiomass\n\nAbies balsamea\n\n1 \n\n145 \n\n0.2 \n\n0.03  (same as TOWood)\n\n0.03 \n\n134 \n\n-1.5 \n\n3 \n\n140 \n\n140 \n\n1.9 \n\n0.8 \n\n16.8 \n\n0.5 \n\n1  (recommanded in paragraph 26 and 32 of calibration tips)\n\n0.976 (from page 74 of , based on the fact that Abies balsamea is very shade tolerant)\n\n0.07 \n\n0.00003 \n\n0.0 \n\n5.3 \n\n21.5 \n\n0.125 (written as “KWlit” because of typo in ) \n\n0.5 (from page 74 of , based on the fact that Abies balsamea is very shade tolerant)\n\nAcer rubrum\n\n2.32 \n\n73 \n\n1 \n\n0.037  (same as TOWood)\n\n0.037 \n\n181 \n\n-2 \n\n2 \n\n145 \n\n145 \n\n2.4 \n\n1.75 \n\n25.5 \n\n0.58 \n\n1  (recommanded in paragraph 26 and 32 of calibration tips)\n\n0.928 (from page 74 of , based on the fact that Acer rubrum is somewhat shade tolerant)\n\n0.014 \n\n0.000022 \n\n0.2 \n\n-46 \n\n71.9 \n\n0.075 (written as “KWlit” because of typo in ) \n\n0.45 (from page 74 of , based on the fact that Acer rubrum is somewhat shade tolerant)\n\nPicea mariana\n\n1 \n\n225 \n\n0.18 \n\n0.03  (same as TOWood)\n\n0.03 \n\n197 \n\n-4.5 \n\n1.5 \n\n138 \n\n138 \n\n1.5 \n\n0.175 \n\n15.1 \n\n0.5 \n\n1  (recommanded in paragraph 26 and 32 of calibration tips)\n\n0.954 (from page 74 of , based on the fact that Picea mariana is pretty shade tolerant)\n\n0.04 \n\n0.000022 \n\n0.0\n\n5.3 \n\n21.5 \n\n0.125 (written as “KWlit” because of typo in ) \n\n0.475 (from page 74 of , based on the fact that Picea mariana is pretty shade tolerant)\n\nGustafson and Miranda (2023)\n\n","type":"content","url":"/startingcalibrationtest/initial-species-parameters#initial-species-parameters","position":11},{"hierarchy":{"lvl1":"Initial species parameters","lvl2":"Generic parameters"},"type":"lvl2","url":"/startingcalibrationtest/initial-species-parameters#generic-parameters","position":12},{"hierarchy":{"lvl1":"Initial species parameters","lvl2":"Generic parameters"},"content":"\n\nThese remaining parameters are the one that must be specified in the generic parameter file no matter what, but that are not supposed to vary by species or by ecoregion (PARunits, PrecipEvents, PrecipEventsWithReplacement, ETExtCoeff, RETCropCoeff, PreventEstablishment, Wythers, DTEMP, MaxPest, AmaxFrac.\n\nExponents are the sources with the same numbers as noted in \n\nSources of parameter values.\nWARNING : If you edit this table, always put any commentaries following the value of the parameter inside parenthesis. This is because we use some Python functions later to read this markdown cell and extract all of the parameter values from this table, to put it into a Python dictionnary that we can then use to interact with LANDIS-II scenarios. Parenthesis and square braquets are ignored, which help the function get the right values for the parameters.\n\nAlso, always separate the value from parenthesis or square braquets with a space\n\nIn short, don't do :\n7[^1]\n7, comes from this source\n7; comes from this source\n\nDo :\n7 [^1]\n7 (Comes from this source)\n7 (because of this reason) [^1]\n\n\nPARunits\n\nPrecipEvents\n\nPrecipEventsWithReplacement\n\nETExtCoeff\n\nRETCropCoeff\n\nPreventEstablishment\n\nWythers\n\nDTEMP\n\nMaxPest\n\nAmaxFrac\n\numol (Same unit as Halfsat, which is from , see previous cell; umol indicates umol/m2/seconds)\n\n11 \n\nTrue (default value in )\n\n0.65 (default value in )\n\n0.30 (default value in )\n\nTrue (to prevent establishment in the monoculture calibration)\n\nTrue \n\nTrue \n\n1.0 (from , where it’s proposed that MaxPest = timestep length/10. Not useful until the calibration of establishment.)\n\n0.75 (default value in )\n\nGustafson and Miranda (2023)\n\n","type":"content","url":"/startingcalibrationtest/initial-species-parameters#generic-parameters","position":13},{"hierarchy":{"lvl1":"Initial species parameters","lvl2":"Exporting initial parameters into JSON files"},"type":"lvl2","url":"/startingcalibrationtest/initial-species-parameters#exporting-initial-parameters-into-json-files","position":14},{"hierarchy":{"lvl1":"Initial species parameters","lvl2":"Exporting initial parameters into JSON files"},"content":"These .JSON files will simply contain the values of the tables above, and will be use to quickly launch LANDIS-II simulations with these parameters without doing it by hand (see next notebooks).\n\nfrom functionsForCalibration import *\nimport json\n\n# We read the markdown content of the previous cell that contains the markdown table with the parameters,\n# and we transform it into a Python dictionnary that can be used with the other functions to interact with\n# LANDIS-II scenarios.\n\n# Reading species core parameters\n# We add the Landis Data parameter indication\ncoreSpeciesParameters = dict()\ncoreSpeciesParameters['LandisData'] = 'Species'\nmarkdownText = read_markdown_cell(\"./3.Initial_Species_Parameters.ipynb\", 9)\nmarkdownTable = extract_table(markdownText)\ncoreSpeciesParameters.update(parseTableSpeciesParameters(markdownTable))\n\n# print(coreSpeciesParameters)\n\n# Reading PnET Species Parameters\n# We format the dictionnary for use with the other functions\nPnETSpeciesParametersFinal = dict()\nPnETSpeciesParametersFinal ['LandisData'] = 'PnETSpeciesParameters'\nmarkdownText = read_markdown_cell(\"./3.Initial_Species_Parameters.ipynb\", 13)\nmarkdownTable = extract_table(markdownText)\nPnETSpeciesParameters = parseTableSpeciesParameters(markdownTable)\nPnETSpeciesParametersFinal['PnETSpeciesParameters'] = PnETSpeciesParameters\n\n# print(PnETSpeciesParametersFinal)\n\n# Species generic parameters\n# We add the Landis Data parameter indicator and another needed for this parameter file\ngenericParameters = dict()\ngenericParameters['LandisData'] = 'PnETGenericParameters'\ngenericParameters['PnETGenericParameters'] = 'Value'\nmarkdownText = read_markdown_cell(\"./3.Initial_Species_Parameters.ipynb\", 11)\nmarkdownTable = extract_table(markdownText)\ngenericParameters.update(parseTableGenericParameters(markdownTable))\n\n# print(genericParameters)\n\n# Generic parameters\n# We're going to add these to the generic species parameters to be in one single dict to create the parameter file that corresponds to them\nmarkdownText = read_markdown_cell(\"./3.Initial_Species_Parameters.ipynb\", 15)\nmarkdownTable = extract_table(markdownText)\ngenericParameters.update(parseTableGenericParameters(markdownTable))\n# print(genericParameters)\n\n# Now, we change any mention of the species name toward a species code usable in LANDIS-II\nspeciesCodeDict = {\"Abies balsamea\" : \"abiebals\",\n                   \"Acer rubrum\" : \"acerrubr\",\n                   \"Picea mariana\" : \"picemari\"}\nfor key in speciesCodeDict.keys():\n    coreSpeciesParameters = replace_in_dict(coreSpeciesParameters, key, speciesCodeDict[key])\n    PnETSpeciesParametersFinal = replace_in_dict(PnETSpeciesParametersFinal, key, speciesCodeDict[key])\n\n# We print the dictionnaries for verification\nprint(coreSpeciesParameters)\nprint(PnETSpeciesParametersFinal)\nprint(genericParameters)\n\n# We save the dictionnary in a file to use it later in other notebooks.\nwith open('./SpeciesParametersSets/Initial/initialCoreSpeciesParameters.json', 'w') as json_file:\n    # Step 4: Write the dictionary to the file\n    json.dump(coreSpeciesParameters, json_file)\nwith open('./SpeciesParametersSets/Initial/initialPnETSpeciesParameters.json', 'w') as json_file:\n    # Step 4: Write the dictionary to the file\n    json.dump(PnETSpeciesParametersFinal, json_file)\nwith open('./SpeciesParametersSets/Initial/InitialGenericParameters.json', 'w') as json_file:\n    # Step 4: Write the dictionary to the file\n    json.dump(genericParameters, json_file)","type":"content","url":"/startingcalibrationtest/initial-species-parameters#exporting-initial-parameters-into-json-files","position":15},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process"},"type":"lvl1","url":"/startingcalibrationtest/getting-the-empirical-data","position":0},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process"},"content":"Here, I catalog the other data needed for the calibration process, that is not the initial parameter values we will be using (for this, see \n\nhere) or the climate and soil data used in the simulations for the calibration (see \n\nhere).\n\nThis other data will be used to :\n\nTarget values to match during the calibration (e.g. biomass growth curves)\n\nDetermine the value of some parameters directly (e.g. maximum longevity)\n\nEstablish ranges of parameter values in which we should remain during the calibration\n\nExpected outcomes of simulations (e.g. competition outcomes, climate change outcomes, etc.)\n\nI will write here as much suggestions a possible for future researchers that will want to calibrate for their own research or study area, but I will also indicate what I will be using in these notebooks.\n\n","type":"content","url":"/startingcalibrationtest/getting-the-empirical-data","position":1},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process","lvl3":"Empirical data for biomass growth curves."},"type":"lvl3","url":"/startingcalibrationtest/getting-the-empirical-data#empirical-data-for-biomass-growth-curves","position":2},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process","lvl3":"Empirical data for biomass growth curves."},"content":"This is an essential part of the calibration process, especially the first step in which we will calibrate each species in “ideal” conditions of growth (mild climate, good soil water retention, etc.). These “ideal” conditions are important to isolate the effect of other parameters and other sources of mortality, so that you can focus on the basic parameters of growth and senescence for your species (see \n\nhere).\n\nBasically, what you want is data that allows you to infer a biomass growth curve for each given species, showing the evolution of the biomass of a cohort for the species in conditions that are as ideal as possible.\n\nAs of today, I’ve ran accross three different strategies to get this data. I’ll describe them in the following sections.","type":"content","url":"/startingcalibrationtest/getting-the-empirical-data#empirical-data-for-biomass-growth-curves","position":3},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process","lvl4":"Option 1 : Sample plot data.","lvl3":"Empirical data for biomass growth curves."},"type":"lvl4","url":"/startingcalibrationtest/getting-the-empirical-data#option-1-sample-plot-data","position":4},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process","lvl4":"Option 1 : Sample plot data.","lvl3":"Empirical data for biomass growth curves."},"content":"By looking at individual tree data from sample plot data, you can infer tree biomass and tree age, making each tree or plot a point on your graph.\n\nBy looking at the points that are at the top of the cloud of points that will result, you can get and idea of the maximum biomass a tree can reach for a given age, which should give you good information about the growth curve. This is a method used by many research so far.\n\nThe problem is that sample plot data is often messy, full of outliers, biases, needing sharing agrements, etc. As such, it will require important work to clean, and several important assumptions will influence your results enormously. For example, the “tree age” data is often missing, and you’ll have to infer it from DBH; and you’ll also have to choose how to translate your individual tree biomass into biomass/surface (as all LANDIS-II biomass output is interpreted in biomass/surface, not biomass/tree).","type":"content","url":"/startingcalibrationtest/getting-the-empirical-data#option-1-sample-plot-data","position":5},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process","lvl4":"Option 2 : Tree growth models.","lvl3":"Empirical data for biomass growth curves."},"type":"lvl4","url":"/startingcalibrationtest/getting-the-empirical-data#option-2-tree-growth-models","position":6},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process","lvl4":"Option 2 : Tree growth models.","lvl3":"Empirical data for biomass growth curves."},"content":"These models are complex equations develloped by foresters, industries or governmental agencies to try and predict growth or yield for different species in different conditions. These are often calibrated based on sample plot data; as such, the work of cleaning/dealing with sample plot data is often done for you. An example is the famous \n\nForest Vegetation Simulator from the USDA. Other such models are simply growth curves published in the litterature, sometimes in books.\n\nThe curves produced by these models are often in biomass/surface, which makes things easier to compare with LANDIS-II outputs. You can also tweak the parameters of these models so that they predict biomass growth in conditions as ideal as possible, making it close to what you’re looking for.\n\nThe main issue is that these models can still produce pretty unrealistic curves; might not be available for your study area/region; and might still need parameters derived from sample plot data (e.g. Site index and maximum basal area for FVS). So while they can make your life simpler, they can still be difficult to use.\n\nFVS can be compiled into a Dockerfile and use in Python; I’ve tried it at first and will keep the functions that I’ve written in a separate document for you to re-use if necessary.\n\nBe warned that the decreasing part of the curves produced by these often often don’t include mortality by senescence, which can make the cruve growth forever, making it difficult to identify the biomass peak which is very important for calibration purposes.\n\nTree growth models have been used by several research teams, including Brian Sturtevant’s and Eric Gustafson (the latter being the author of the calibration tips for PnET-Succession that are the basis of these documents).","type":"content","url":"/startingcalibrationtest/getting-the-empirical-data#option-2-tree-growth-models","position":7},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process","lvl4":"Option 3 : Forest inventory data.","lvl3":"Empirical data for biomass growth curves."},"type":"lvl4","url":"/startingcalibrationtest/getting-the-empirical-data#option-3-forest-inventory-data","position":8},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process","lvl4":"Option 3 : Forest inventory data.","lvl3":"Empirical data for biomass growth curves."},"content":"Some forest inventories contain data that allow you to infer tree or stand age and the biomass of your species of interest. For example, the \n\nNational Forest Inventory of Canada proposes raster maps of several forest attributes Canada-wide, including pixel/stand forest age, and the biomass of each individual species that are considered in the forest inventory.\n\nIf you use each pixel from the maps of a single year as a point and plot a cloud of points on a biomass/time axis, you might get a good estimation of a growth curve, with a growth peak and a initial growth (the two most important parts in our case). This is, in essence, a \n\n“space-for-time” substitution, where you look at many different points in space that will be forests at different stages of growth, rather than looking at the long-term history of a few forests.\n\nThe big limitation of this data is that you often get one “stand age” or “pixel age” value per pixel, rather than a separate age value for the trees of a given species in the pixel. As such, in a pixel of 80 years, you cannot know if the biomass of species X comes from trees that are 80 years old, or if these trees are younger. But you can interpret the upper points of the cloud of points as “the maximum biomass that a species can reach for this stand age”, which is pretty close to the mark of what you’re looking for.\n\nAnother big limitation is that in most pixels (if not all), your species will be mixed with other species. This is especially true if you are calibrating a “companion” species (the type of tree species that is never abundant, but yet found in many forests). You can restrict the points of your data to only the pixels where more than 50% of the biomass comes from your species of interest; but you might not get enough points for some rarer species. In these case, you will probably need to develop a correction of biomass to try and have an estimate of the biomass that your species can reach when it composes 100% of the stand. You might do this by making a statistical model that attempts to predict the biomass of your species in a stand or pixel based on the age of the pixel, and the % of composition of the species. You might want to train your statistic model on only the top percentile of points (as you’re looking out for the most biomass your species can achieve for a given age).\n\nThis data is often generated through a combination of forest inventory sampling (aerial photography, etc.) and sample plot data (which are assignated to stand or pixels via assignation algorithms like the kNN method). As such, it often contains information from sample plots, but which has already been cleaned and dealt with.\n\nThe biomass data is often expressed in biomass/surface, making it easy to compare to LANDIS-II outputs.\n\nThis is the data I will be using here. From what I heard, other teams have been using such data in the past.\n\nWhat is the spatial extent for which I should take growth data for the calibration ? And what climate data should I use depending on the origin of my growth data ?\n\nShort answer : I wager it’s a very complicated question, with no clear answer. You might focus only on your study area/simulated area, but there are trade-offs no matter what you choose. The important things seem to be that you need to make sure 1) you get enough empirical growth data to estimate the maximum growth initial curve and peak your species can achieve in your study area (if there is not enough data in your study area, you will need to look at a larger scale than just your study area); and 2) that the temperatures and precipitations you use during the calibration come from the area where you gathered your empirical growth data, but that they are averaged to make them mild and constant; added to a good soil type (SILO) to ensure a relatively ideal water retention; and that the temperature is a close to the optimal for your species as possible (which you can ensure by changing the PsnTOpt parameter temporarely).\n\nExtended answer :\n\nThe empirical growth data you’re looking for is going to be used in the first calibration step, corresponding to growth in “ideal” conditions. This step is very important, because that’s where we are going to calibrate some of the most sensitive parameters of PnET-Succession. It’s also the step where we’re going to effectively give the “upper bound” of the performance of the tree species calibrated. It’s crucial to get this upper bound right, because the algorithm and equations of PnET-Succession are mostly based on photosynthesis reduction factors (linked to light, water, age, temperature, CO2, etc.) that are going to reduce the growth of the tree species bellow this upper bound. If this upper bound is too high, you’ll overestimate the growth of the species most of the time (if not all of the time); but you can also underestimate it by setting it too low.\n\nThe empirical growth area you’re getting here is used to have an estimate of this upper bound. It’s possible that you have enough empirical data from measurements taken inside your study area to have some good estimates; but maybe you won’t have enough data points, or no growth models available for the conditions of your study area. In that case, you’ll have to look to a larger area to get data.\n\nBut the larger the area where you take empirical data gets, the more you get into another problem : as you are looking at more trees of your species in a larger area, you’re also looking at a higher diversity of phenotypes or traits or variants in your trees. As such, the upper bound of growth that you will be getting from this data might be from a phenotype not present in your area; or maybe you’ll be combining measures from different trees, and so maybe different phenotypes. As such, this upper bound that you’ll be estimating might still be for your tree species; but it might become an upper bound for trees that might be quite different from the ones in your area (even thought they are from the same species). It might also become an upper bound for a “soup” of different phenotypes, making it less realistic, and introducing uncertainty or potential bias. As such, the bigger is not necesserally the better : it might be best to restrict your choice of data to your study area or to a province or state or region to avoid these issues.\n\nWith the choice of the area from which you will take your empirical growth data also comes a second question : what climate data should you use during the calibration simulation ? Again, the goal of the first calibration step (where you will use your empirical growth data) is to make sure that your species reach the right upper bound given ideal conditions. But how do we define ideal conditions in that case ? Theoritically, these should be the climate conditions that led that this upper bound you have seen in your empirical data. Problem is, you will most likely not know what was the exact climate data associate with this growth : maybe it’s because your data is a composite of points from many different places (e.g. sample plot data or forest inventory data); or maybe it’s because your data comes from a growth model that do not provide the climate data associated to a growth curve. So, what climate data should you give ?\n\nThe option used by \n\nGustafson and Miranda (2023) is to use an averaged historical climate data stream (same climate every year, but changes every months based on average from historical monthly data) from your study area. To ensure a relatively ideal amount of water for the species to use during the calibration, Gustafson recommands using averaged “typical” precipitations and a soil of type SILO - which will ensure that your species have a right quantity of water, not too much, and not too little. As for temperature, Gustafson recommands cheating a bit by changing the PsnTOpt parameter of your tree species temporarely so that it matches the average of the growing season temperatures in your climate data (which would already be a constant climate every year because it would be an average climate). That, or making sure that the average growing season temperatures matches the PsnTOpt of your species to begin with. This ensures that the photosynthesis of your species will be maximum. However, Gustafson points out that since you’re making the climate very mild and very “ideal” for your species, this will most likely not match the less ideal and less mild climate that generated the empirical growth data you’re using to estimate this upper bound. That is why Gustafson recommands that you should try reach a growth that is a bit above the upper bound estimated from your data in this first step, if you use his methodology.\n\nI think this approach makes a lot of sense : it solves the issue of not knowing the exact climate that is associated with the upper bound of growth derived from your empirical data by tweaking the climate data coming from your study area (or the area from which your empirical growth data comes from) so that it becomes “ideal”; but to compensate this, you’ll simply have to target a bit higher than the upper bound. How much higher ? There are no perfect answers here again, just approximation. 5-10% higher could be a good estimate with a rule-of-thumb approach.\n\nWhat data should I use to calibrate variants, like southern variants that are more adapted to heat ? And what variant I am calibrating for if I use this methodology ?\n\nThat’s another big question. The more local the data you use (wherever in the initial parameter values you will use, parameter range, empirical growth data, etc.), the more you will be calibrating for the local phenotypes of the area you are focusing on. Invertly, the broader the data you use spatialy (and you will most likely need to use data from many different places), the more the species you are calibrating will be a kind of “soup” of “average” of many phenotypes and variants. It won’t be the most realistic option; but that’s often the best you can do given the low density of data we have for many tree species (e.g. there is not enough data locally to get values for all parameters or good empricial growth estimates as described in the tip section above).\n\nOnce you have calibrated your species, if you want to represent “northern” and “southern” variants that are adapted to different conditions of heat (or even different conditions of drought), you might want to change some parameters related to these aspects. In particular, by changing the parameters H1, H2, H3 and H4, you will change the response of the species to different conditions of water in the soil. A variant adapted to dryier conditions will certainly have increased values of H1, H2, H3 and H4 overall (can pump more water from the soil where pressure is low; but is also more sensitive to waterlogging). For temperature, you will most likely need to change PsnTMin, PsnTOpt, and PsnTMax. Gustafson notes in \n\nGustafson and Miranda (2023) : I use PsnTMax to make more northerly species less competitive than southerly species as climate warms. You can also slightly change PsnTOpt, which indicates the optimum temperature for the species. How much you increase or decrease these values is up to your interpretation; you can compare to other species, but you can also look at the average temperatures for the growing season at the latitude corresponding to the center of the range distribution of your variant.\n\n","type":"content","url":"/startingcalibrationtest/getting-the-empirical-data#option-3-forest-inventory-data","position":9},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process","lvl4":"Option used here : data from the National Forest Inventory of Canada","lvl3":"Empirical data for biomass growth curves."},"type":"lvl4","url":"/startingcalibrationtest/getting-the-empirical-data#option-used-here-data-from-the-national-forest-inventory-of-canada","position":10},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process","lvl4":"Option used here : data from the National Forest Inventory of Canada","lvl3":"Empirical data for biomass growth curves."},"content":"See :\n\n for general information and visualisation of some of the maps\n\n to download the maps\n\nBeaudoin et al. (2018) for details about how the maps were generated.\n\nHere, I’m using data from the most recent year (2011). I’m using the map /NFI_Data/NFI_MODIS250m_2011_kNN_Structure_Stand_Age_v1.tif for the stand (pixel) ages; /NFI_Data/NFI_MODIS250m_2011_kNN_Structure_Biomass_TotalLiveAboveGround_v1.tif for biomass of stands; and a series of rasters like /NFI_Data/NFI_MODIS250m_2011_kNN_Species_Abie_Bal_v1.tif that indicate the propotion of /NFI_Data/NFI_MODIS250m_2011_kNN_Structure_Biomass_TotalLiveAboveGround_v1.tif that corresponds to the species of interest (e.g. Abies balsamea in that case). All maps are currently in ./ReferencesAndData.\n\nI’m also using several “mask” rasters to restrict or differenciate the pixel data from different provinces in Canada (e.g. quebecMask.tif, etc., all in ./ReferencesAndData).\n\nHere, before we use this dataset, I quickly show how it looks like by focusing on the highest points of the point clouds that it produces. Focusing on these highest points will give us an idea of the “best growth” that the species can achieve through by looking at different pixels from the same year throughout all of Canada.\n\n# We read data from the NFI for our free species, and plot the distribution of the points above 95% of the maximum value in\n# each 3 years window (which allows us to keep the top points)\nfrom functionsForCalibration import *\nimport matplotlib.pyplot as plt\n\n\n# We define the path to where the rasters are\nspecies_path = \"./ReferencesAndData/NFI_Data/NFI_MODIS250m_2011_kNN_Species_Abie_Bal_v1.tif\"\nage_path = \"./ReferencesAndData/NFI_Data/NFI_MODIS250m_2011_kNN_Structure_Stand_Age_v1.tif\"\nbiomass_path = \"./ReferencesAndData/NFI_Data/NFI_MODIS250m_2011_kNN_Structure_Biomass_TotalLiveAboveGround_v1.tif\"\n# We define the paths to the mask rasters for each province\ndictOfMasks = {\"NS\":\"./ReferencesAndData/SpatialBoundaries/novaScotiaMask.tif\",\n              \"QC\":\"./ReferencesAndData/SpatialBoundaries/quebecMask.tif\",\n              \"ON\":\"./ReferencesAndData/SpatialBoundaries/ontarioMask.tif\",\n              \"MT\":\"./ReferencesAndData/SpatialBoundaries/manitobaMask.tif\",\n              \"SK\":\"./ReferencesAndData/SpatialBoundaries/saskatchewanMask.tif\",\n              \"AB\":\"./ReferencesAndData/SpatialBoundaries/albertaMask.tif\",\n              \"BC\":\"./ReferencesAndData/SpatialBoundaries/britishColumbiaMask.tif\",}\n\n\nplottingNFISpeciesUpperBiomassByProvince(species_path,\n                                         age_path,\n                                         biomass_path,\n                                         \"Abies balsamea\",\n                                         dictOfMasks)\n\nAs such, we can see that :\n\nThe NFI data shows some pretty clear growth patterns (initial growth, peak, senescence)\n\nWe see that the different provinces can have very different growth peaks and initial growth/senescence. Upon closer inspection (plotting again but only for points with at least 50% of biomass composed of Abies balsamea), it seems to mostly be due to the differences in the mixture/competition of the species in difference province. SK, AB, MT and BC don’t have many points where Abies balsamea is dominant. Meanwhile, NS, QC and ON have a lot of it.\n\nNow, here are the same figures for the other species :\n\n# We define the path to where the rasters are\nspecies_path = \"./ReferencesAndData/NFI_Data/NFI_MODIS250m_2011_kNN_Species_Pice_Mar_v1.tif\"\nage_path = \"./ReferencesAndData/NFI_Data/NFI_MODIS250m_2011_kNN_Structure_Stand_Age_v1.tif\"\nbiomass_path = \"./ReferencesAndData/NFI_Data/NFI_MODIS250m_2011_kNN_Structure_Biomass_TotalLiveAboveGround_v1.tif\"\n\nplottingNFISpeciesUpperBiomassByProvince(species_path,\n                                         age_path,\n                                         biomass_path,\n                                         \"Acer rubrum\",\n                                         dictOfMasks)\n\n# We define the path to where the rasters are\nspecies_path = \"./ReferencesAndData/NFI_Data/NFI_MODIS250m_2011_kNN_Species_Acer_Rub_v1.tif\"\nage_path = \"./ReferencesAndData/NFI_Data/NFI_MODIS250m_2011_kNN_Structure_Stand_Age_v1.tif\"\nbiomass_path = \"./ReferencesAndData/NFI_Data/NFI_MODIS250m_2011_kNN_Structure_Biomass_TotalLiveAboveGround_v1.tif\"\n\nplottingNFISpeciesUpperBiomassByProvince(species_path,\n                                         age_path,\n                                         biomass_path,\n                                         \"Picea mariana\",\n                                         dictOfMasks)\n\nWe can again see some pretty clear patterns for Acer rubrum and Picea mariana. As such, this dataset should do.\n\n","type":"content","url":"/startingcalibrationtest/getting-the-empirical-data#option-used-here-data-from-the-national-forest-inventory-of-canada","position":11},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process","lvl4":"Producing estimated growth curves in ideal conditions (in Canada) for our species with NFI data","lvl3":"Empirical data for biomass growth curves."},"type":"lvl4","url":"/startingcalibrationtest/getting-the-empirical-data#producing-estimated-growth-curves-in-ideal-conditions-in-canada-for-our-species-with-nfi-data","position":12},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process","lvl4":"Producing estimated growth curves in ideal conditions (in Canada) for our species with NFI data","lvl3":"Empirical data for biomass growth curves."},"content":"\n\nBased on the NFI data shown and explored in the previous section, we now have to produce estimated growth curves based on this data that we will be able to use as a “target” for the first step of the calibration of PnET-Succession, where we will try to match the curves produced by PnET-Succession with the data.\n\nWe could of course simply plot the curves produced by PnET-Succession onto the data points directly, and estimate visually if the fit is good. But I prefer to produce curves that we can use to automatize the calibration process (with a curve, we can compute the difference between the PnET-Succession curve and the one we have from the data).\n\nI’ve ended up making two sets of curves with two different methods :\n\nThe first one is a simple algorithm that builds a curve based on a set of rules to go from data point to data point, and then smooth the curve.\n\nThe second one uses a Generalized Additive Model (GAM) fitted on pre-processed data. The GAM is then used to generate curves of biomass for different levels of abundance.\n\nIn the next sections, I’ll briefly describe both methods and show the curves produced by each before comparing the curves from both methods.\n\n","type":"content","url":"/startingcalibrationtest/getting-the-empirical-data#producing-estimated-growth-curves-in-ideal-conditions-in-canada-for-our-species-with-nfi-data","position":13},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process","lvl5":"Producing growth curves from NFI data with a simple curve-construction algorithm","lvl4":"Producing estimated growth curves in ideal conditions (in Canada) for our species with NFI data","lvl3":"Empirical data for biomass growth curves."},"type":"lvl5","url":"/startingcalibrationtest/getting-the-empirical-data#producing-growth-curves-from-nfi-data-with-a-simple-curve-construction-algorithm","position":14},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process","lvl5":"Producing growth curves from NFI data with a simple curve-construction algorithm","lvl4":"Producing estimated growth curves in ideal conditions (in Canada) for our species with NFI data","lvl3":"Empirical data for biomass growth curves."},"content":"\n\nI’ve used a relatively simple algorithim to estimate these curves based on the data :\n\nWe will save these curves in .csv files so that we can use them later during the calibration.\n\nTo learn more, take a look at the function analyze_species_growth_curves in \n\nfunctionsForCalibration​.py.\n\n","type":"content","url":"/startingcalibrationtest/getting-the-empirical-data#producing-growth-curves-from-nfi-data-with-a-simple-curve-construction-algorithm","position":15},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process","lvl6":"Producing estimated growth curves for Abies balsamea with the curve-construction algorithm","lvl5":"Producing growth curves from NFI data with a simple curve-construction algorithm","lvl4":"Producing estimated growth curves in ideal conditions (in Canada) for our species with NFI data","lvl3":"Empirical data for biomass growth curves."},"type":"lvl6","url":"/startingcalibrationtest/getting-the-empirical-data#producing-estimated-growth-curves-for-abies-balsamea-with-the-curve-construction-algorithm","position":16},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process","lvl6":"Producing estimated growth curves for Abies balsamea with the curve-construction algorithm","lvl5":"Producing growth curves from NFI data with a simple curve-construction algorithm","lvl4":"Producing estimated growth curves in ideal conditions (in Canada) for our species with NFI data","lvl3":"Empirical data for biomass growth curves."},"content":"\n\nfrom functionsForCalibration import *\n\nresults = analyze_species_growth_curves(\n    prevalence_raster_path='./ReferencesAndData/NFI_Data/NFI_MODIS250m_2011_kNN_Species_Abie_Bal_v1.tif',\n    age_raster_path='./ReferencesAndData/NFI_Data/NFI_MODIS250m_2011_kNN_Structure_Stand_Age_v1.tif',\n    biomass_raster_path='./ReferencesAndData/NFI_Data/NFI_MODIS250m_2011_kNN_Structure_Biomass_TotalLiveAboveGround_v1.tif',\n    species_name='Abies balsamea',\n    output_csv_path='./ReferencesAndData/Growth Curves Predictions/abies_balsamea_estimated_growth_curves_NFI.csv',\n    prevalence_thresholds=[100, 80, 60, 40, 20],\n    peak_age_min=0,\n    peak_age_max=100,\n    senescence_age_window=5,\n    outlier_age_window=5,\n    outlier_percentile=100, # Don't remove any outlier for now\n    smoothing_window=200,\n    smoothing_polyorder=5,\n    n_sample_plot=2000000,\n    create_plot=True,\n    plot_figsize=(20, 8)\n)\n\n","type":"content","url":"/startingcalibrationtest/getting-the-empirical-data#producing-estimated-growth-curves-for-abies-balsamea-with-the-curve-construction-algorithm","position":17},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process","lvl6":"Producing estimated growth curves for Acer rubrum with the curve-construction algorithm","lvl5":"Producing growth curves from NFI data with a simple curve-construction algorithm","lvl4":"Producing estimated growth curves in ideal conditions (in Canada) for our species with NFI data","lvl3":"Empirical data for biomass growth curves."},"type":"lvl6","url":"/startingcalibrationtest/getting-the-empirical-data#producing-estimated-growth-curves-for-acer-rubrum-with-the-curve-construction-algorithm","position":18},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process","lvl6":"Producing estimated growth curves for Acer rubrum with the curve-construction algorithm","lvl5":"Producing growth curves from NFI data with a simple curve-construction algorithm","lvl4":"Producing estimated growth curves in ideal conditions (in Canada) for our species with NFI data","lvl3":"Empirical data for biomass growth curves."},"content":"\n\nfrom functionsForCalibration import *\n\nresults = analyze_species_growth_curves(\n    prevalence_raster_path='./ReferencesAndData/NFI_Data/NFI_MODIS250m_2011_kNN_Species_Acer_Rub_v1.tif',\n    age_raster_path='./ReferencesAndData/NFI_Data/NFI_MODIS250m_2011_kNN_Structure_Stand_Age_v1.tif',\n    biomass_raster_path='./ReferencesAndData/NFI_Data/NFI_MODIS250m_2011_kNN_Structure_Biomass_TotalLiveAboveGround_v1.tif',\n    species_name='Acer rubrum',\n    output_csv_path='./ReferencesAndData/Growth Curves Predictions/acer_rubrum_estimated_growth_curves_NFI.csv',\n    prevalence_thresholds=[100, 80, 60, 40, 20],\n    peak_age_min=0,\n    peak_age_max=100,\n    senescence_age_window=5,\n    outlier_age_window=5,\n    outlier_percentile=100, # Don't remove any outlier for now\n    smoothing_window=200,\n    smoothing_polyorder=5,\n    n_sample_plot=2000000,\n    create_plot=True,\n    plot_figsize=(20, 8)\n)\n\n","type":"content","url":"/startingcalibrationtest/getting-the-empirical-data#producing-estimated-growth-curves-for-acer-rubrum-with-the-curve-construction-algorithm","position":19},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process","lvl6":"Producing estimated growth curves for Picea mariana with the curve-construction algorithm","lvl5":"Producing growth curves from NFI data with a simple curve-construction algorithm","lvl4":"Producing estimated growth curves in ideal conditions (in Canada) for our species with NFI data","lvl3":"Empirical data for biomass growth curves."},"type":"lvl6","url":"/startingcalibrationtest/getting-the-empirical-data#producing-estimated-growth-curves-for-picea-mariana-with-the-curve-construction-algorithm","position":20},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process","lvl6":"Producing estimated growth curves for Picea mariana with the curve-construction algorithm","lvl5":"Producing growth curves from NFI data with a simple curve-construction algorithm","lvl4":"Producing estimated growth curves in ideal conditions (in Canada) for our species with NFI data","lvl3":"Empirical data for biomass growth curves."},"content":"We’re taking a look at our third species, Picea mariana. Same protocol as previous section with Abies balsamea.\n\nfrom functionsForCalibration import *\n\nresults = analyze_species_growth_curves(\n    prevalence_raster_path='./ReferencesAndData/NFI_Data/NFI_MODIS250m_2011_kNN_Species_Pice_Mar_v1.tif',\n    age_raster_path='./ReferencesAndData/NFI_Data/NFI_MODIS250m_2011_kNN_Structure_Stand_Age_v1.tif',\n    biomass_raster_path='./ReferencesAndData/NFI_Data/NFI_MODIS250m_2011_kNN_Structure_Biomass_TotalLiveAboveGround_v1.tif',\n    species_name='Picea Mariana',\n    output_csv_path='./ReferencesAndData/Growth Curves Predictions/picea_mariana_estimated_growth_curves_NFI.csv',\n    prevalence_thresholds=[100, 80, 60, 40, 20],\n    peak_age_min=0,\n    peak_age_max=200, # Peak is a bit later for Picea mariana compared to Abies balsamea and Acer rubrum\n    senescence_age_window=5,\n    outlier_age_window=5,\n    outlier_percentile=100, # Don't remove any outlier for now\n    smoothing_window=200,\n    smoothing_polyorder=5,\n    n_sample_plot=2000000,\n    create_plot=True,\n    plot_figsize=(20, 8)\n)\n\n","type":"content","url":"/startingcalibrationtest/getting-the-empirical-data#producing-estimated-growth-curves-for-picea-mariana-with-the-curve-construction-algorithm","position":21},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process","lvl5":"Producing growth curves from NFI data with a Generalized Additive Model (GAM)","lvl4":"Producing estimated growth curves in ideal conditions (in Canada) for our species with NFI data","lvl3":"Empirical data for biomass growth curves."},"type":"lvl5","url":"/startingcalibrationtest/getting-the-empirical-data#producing-growth-curves-from-nfi-data-with-a-generalized-additive-model-gam","position":22},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process","lvl5":"Producing growth curves from NFI data with a Generalized Additive Model (GAM)","lvl4":"Producing estimated growth curves in ideal conditions (in Canada) for our species with NFI data","lvl3":"Empirical data for biomass growth curves."},"content":"\n\nHere, we process the data in order to identify the highest percentiles of biomass for each species for set of successive age windows and abundance windows (see figure below). Once we have identified these percentile, we use a \n\nGeneralize Additive Model (GAM) fitted on this processed data in order to predict the percentile values as a fonction of age, but also of the percentage of abundance of the species in a cell. GAMs are dealt with using the \n\npyGAM package.\n\nThis is essential for species like Acer rubrum in our dataset for which most of the pixels where the species is present do not have a high abundance for the species; for the great majority of pixels values for Acer rubrum, we do not go beyond 60% of abundance of Acer rubrum in the stand (see figures above). However, remember that our goal here is to estimate (as much as can be) the growth of the species in ideal conditions, which includes no competition for light from other species, meaning in monoculture (100% abundance).\n\nThe use of a GAM allows us to make predictions about what would be the growth of the species in condition of full abundance (100%)/monoculture, even though we have no data or few data points/pixels with such an abundance.\n\nThe issue is that fitting a GAM on the NFI data was more difficult than I expected; because of the space-for-time substitution we’re doing and the fact that we’re looking at data from the entire province, it seems that the patterns in the data (e.g. effect of age and abundance on biomass) can seem quite clear to the human eye, but can be difficult to mirror properly in a GAM. The overabundance of low-abundance pixels, and also the presence of some high-abundance pixels with relatively low biomass values and other outliers tended to create unexpected and absurd GAM behaviour.\n\nI solved this issue by pre-processing the data (see figure below) to 1) reduce the number of points, 2) remove the outliers, and 3) force a monotonic increasing rule regarding the effect of abundance of the high percentiles of biomass. This pre-processing is highly customizible, allowing you to define the size of the windows, the percentile computed, or to exclude certain pixels; see the function prepareNFIDataForGAMs. The fitting of the GAM can also be customised.\n\nThe best GAM structure I’ve found so far to produce these curve is the following :\n\n\\text{High Biomass Percentile} = s(age, \\text{with a concave constraint}) + interaction(age, \\% abundance, \\text{with a concave constraint})\n\nThe concave constrait force the effect of age and the 2D plane of the interaction effect (tensor product) of age and % abundance to be concave, which matches the biological reality that after a certain age, the biomass of the species will decrease.\n\n","type":"content","url":"/startingcalibrationtest/getting-the-empirical-data#producing-growth-curves-from-nfi-data-with-a-generalized-additive-model-gam","position":23},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process","lvl6":"Producing estimated growth curves for Abies balsamea with a GAM","lvl5":"Producing growth curves from NFI data with a Generalized Additive Model (GAM)","lvl4":"Producing estimated growth curves in ideal conditions (in Canada) for our species with NFI data","lvl3":"Empirical data for biomass growth curves."},"type":"lvl6","url":"/startingcalibrationtest/getting-the-empirical-data#producing-estimated-growth-curves-for-abies-balsamea-with-a-gam","position":24},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process","lvl6":"Producing estimated growth curves for Abies balsamea with a GAM","lvl5":"Producing growth curves from NFI data with a Generalized Additive Model (GAM)","lvl4":"Producing estimated growth curves in ideal conditions (in Canada) for our species with NFI data","lvl3":"Empirical data for biomass growth curves."},"content":"\n\nfrom functionsForCalibration import *\n\nwindowed_df = prepareNFIDataForGAMs(abundance_path = './ReferencesAndData/NFI_Data/NFI_MODIS250m_2011_kNN_Species_Abie_Bal_v1.tif',\n                                  age_path = './ReferencesAndData/NFI_Data/NFI_MODIS250m_2011_kNN_Structure_Stand_Age_v1.tif',\n                                  biomass_path = './ReferencesAndData/NFI_Data/NFI_MODIS250m_2011_kNN_Structure_Biomass_TotalLiveAboveGround_v1.tif',\n                                  speciesName = \"Abies balsamea\",\n                                  age_window = 5,\n                                  abundance_window = 10,\n                                  percentile = 100,\n                                  mask_path = None,\n                                  printPlot = False)\n\ncreateGAMsAndPredictionsForNFIDataGrowthCurves(windowed_df,\n                                                './ReferencesAndData/Growth Curves Predictions/Abies Balsamea_gam_predictions.csv',\n                                               \"Abies balsamea\",\n                                                cutoff_age = 150,\n                                                abundance_levels = [100, 80, 60, 40, 20],\n                                                printPlot = True)\n\n","type":"content","url":"/startingcalibrationtest/getting-the-empirical-data#producing-estimated-growth-curves-for-abies-balsamea-with-a-gam","position":25},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process","lvl6":"Producing estimated growth curves for Acer rubrum with a GAM","lvl5":"Producing growth curves from NFI data with a Generalized Additive Model (GAM)","lvl4":"Producing estimated growth curves in ideal conditions (in Canada) for our species with NFI data","lvl3":"Empirical data for biomass growth curves."},"type":"lvl6","url":"/startingcalibrationtest/getting-the-empirical-data#producing-estimated-growth-curves-for-acer-rubrum-with-a-gam","position":26},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process","lvl6":"Producing estimated growth curves for Acer rubrum with a GAM","lvl5":"Producing growth curves from NFI data with a Generalized Additive Model (GAM)","lvl4":"Producing estimated growth curves in ideal conditions (in Canada) for our species with NFI data","lvl3":"Empirical data for biomass growth curves."},"content":"\n\nfrom functionsForCalibration import *\n\nwindowed_df = prepareNFIDataForGAMs(abundance_path = './ReferencesAndData/NFI_Data/NFI_MODIS250m_2011_kNN_Species_Acer_Rub_v1.tif',\n                                  age_path = './ReferencesAndData/NFI_Data/NFI_MODIS250m_2011_kNN_Structure_Stand_Age_v1.tif',\n                                  biomass_path = './ReferencesAndData/NFI_Data/NFI_MODIS250m_2011_kNN_Structure_Biomass_TotalLiveAboveGround_v1.tif',\n                                  speciesName = \"Acer rubrum\",\n                                  age_window = 5,\n                                  abundance_window = 10,\n                                  percentile = 100,\n                                  mask_path = None,\n                                  printPlot = False)\n\ncreateGAMsAndPredictionsForNFIDataGrowthCurves(windowed_df,\n                                                './ReferencesAndData/Growth Curves Predictions/Acer rubrum_gam_predictions.csv',\n                                               \"Acer rubrum\",\n                                                cutoff_age = 150,\n                                                abundance_levels = [100, 80, 60, 40, 20],\n                                                printPlot = True)\n\n","type":"content","url":"/startingcalibrationtest/getting-the-empirical-data#producing-estimated-growth-curves-for-acer-rubrum-with-a-gam","position":27},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process","lvl6":"Producing estimated growth curves for Picea mariana with a GAM","lvl5":"Producing growth curves from NFI data with a Generalized Additive Model (GAM)","lvl4":"Producing estimated growth curves in ideal conditions (in Canada) for our species with NFI data","lvl3":"Empirical data for biomass growth curves."},"type":"lvl6","url":"/startingcalibrationtest/getting-the-empirical-data#producing-estimated-growth-curves-for-picea-mariana-with-a-gam","position":28},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process","lvl6":"Producing estimated growth curves for Picea mariana with a GAM","lvl5":"Producing growth curves from NFI data with a Generalized Additive Model (GAM)","lvl4":"Producing estimated growth curves in ideal conditions (in Canada) for our species with NFI data","lvl3":"Empirical data for biomass growth curves."},"content":"\n\nfrom functionsForCalibration import *\n\nwindowed_df = prepareNFIDataForGAMs(abundance_path = './ReferencesAndData/NFI_Data/NFI_MODIS250m_2011_kNN_Species_Pice_Mar_v1.tif',\n                                  age_path = './ReferencesAndData/NFI_Data/NFI_MODIS250m_2011_kNN_Structure_Stand_Age_v1.tif',\n                                  biomass_path = './ReferencesAndData/NFI_Data/NFI_MODIS250m_2011_kNN_Structure_Biomass_TotalLiveAboveGround_v1.tif',\n                                  speciesName = \"Picea mariana\",\n                                  age_window = 5,\n                                  abundance_window = 10,\n                                  percentile = 100,\n                                  mask_path = None,\n                                  printPlot = False)\n\ncreateGAMsAndPredictionsForNFIDataGrowthCurves(windowed_df,\n                                                './ReferencesAndData/Growth Curves Predictions/Picea mariana_gam_predictions.csv',\n                                               \"Picea mariana\",\n                                                cutoff_age = 200, # The take more data as the pic of Picea mariana seems to be later than for Abies balsamea and Acer rubrum\n                                                abundance_levels = [100, 80, 60, 40, 20],\n                                                printPlot = True)\n\n","type":"content","url":"/startingcalibrationtest/getting-the-empirical-data#producing-estimated-growth-curves-for-picea-mariana-with-a-gam","position":29},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process","lvl3":"Values needed to estimate certain parameters"},"type":"lvl3","url":"/startingcalibrationtest/getting-the-empirical-data#values-needed-to-estimate-certain-parameters","position":30},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process","lvl3":"Values needed to estimate certain parameters"},"content":"\n\n","type":"content","url":"/startingcalibrationtest/getting-the-empirical-data#values-needed-to-estimate-certain-parameters","position":31},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process","lvl4":"Longevity and Max Longevity","lvl3":"Values needed to estimate certain parameters"},"type":"lvl4","url":"/startingcalibrationtest/getting-the-empirical-data#longevity-and-max-longevity","position":32},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process","lvl4":"Longevity and Max Longevity","lvl3":"Values needed to estimate certain parameters"},"content":"\n\nWhat we will call here “Longevity” and “Max Longevity” are necessary to calibrate the senescence part of the growth curve for our species.\n\nThe difference between the two is this, per the team of Brian Sturtevant who explained their methodology to me :\n\nLongevity is the rule-of-thumb, expert opinion longevity for a given tree species. This is the age at which it’s expected that a tree of a given species will die, in a give region. These are the number often reported in the litterature, and also used in the core species parameter file of LANDIS-II as its “Longevity” parameter for each tree species used.\n\nMax Longevity is the real, empirical maximum age that a tree species can reach in the study area. It’s often not reported and difficult to find. A good way to find it is to look at sample plot data and find the oldest trees ever found for a given species (which can be difficult to find as the “age” data is often not directly available in sample plots data).\n\nBrian Sturtevant and his team have used these two notions to calibrate the senescence part of the growth curves in ideal conditions as explained in \n\n.  This part from \n\nthis supplementary material of Reese et al. (2025) describes Brian’s methodology of explains it all :\n\nWe used an unpublished review and analysis led by John Du Plissis at the University of Minnesota-Duluth to define both tree species longevity (the age at which a species age cohort can no longer persist) and the initiation of decline that is defined by the age-related photosynthesis reduction factor (PsnAgeRed) parameter in PnET Succession. In general, the maximum species longevity of Loehle (1988) corresponds with the tree species longevity parameter, while the typical species’ longevity from the same publication determines the initiation of decline, where PsnAgeRed is calibrated such that the fAGE (age reduction factor) begins to decline (~0.99) at the Typical Mortality age of the species.\n\nThe data used by Brian’s team for Typical Longevity and Max Longevity are cited as coming from \n\nLoehle (1988) in ReeseEtAl_CanJForRes_2024_supplA.docx ; it’s an article that seem to compute them based on several characteristics of tree species.\n\nIn the end, Brian’s team is using a combination of data from \n\nLoehle (1988) and estimates found by John Du Plissis (yet unpublished). I’m going to use the data from \n\nLoehle (1988), which should be enough for our goals until the data from Du Plissis is published.\n\nLoehle (1988), defines “Typical” versus “Maximum” longevity in the following terms :\n\nTypical longevity is the age of the older trees in an old-growth stand, whereas maximum longevity is the upper known maximum above which very few trees are found.\n\nWe can find the value of typical longevity and maximum longevity from Loehle in the Appendix 1. Here are the values for our three species :\n\nSpecies\n\nMINREP (years)\n\nAVEREP (years)\n\nTYPMORT (years)\n\nMAXMORT (years)\n\nSpecific gravity\n\nGrowth rate\n\nShade tolerance\n\nVolumetric heat (J·cm⁻³)\n\nDecay resistance\n\nAbies balsamea\n\n15\n\n30\n\n125\n\n150\n\n0.34\n\n4\n\n5\n\n6.42\n\n1\n\nPicea mariana\n\n10\n\n18\n\n150\n\n250\n\n0.43\n\n2\n\n4\n\n7.91\n\n1\n\nAcer rubrum\n\n4\n\n\n\n80\n\n150\n\n0.49\n\n4\n\n2\n\n9.93\n\n1\n\n","type":"content","url":"/startingcalibrationtest/getting-the-empirical-data#longevity-and-max-longevity","position":33},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process","lvl3":"Ranges of parameter values for the calibration"},"type":"lvl3","url":"/startingcalibrationtest/getting-the-empirical-data#ranges-of-parameter-values-for-the-calibration","position":34},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process","lvl3":"Ranges of parameter values for the calibration"},"content":"\n\nTable with ranges extracted from the litterature for most PnET parameters ?\n\nFrom Brian’s  team (ReeseEtAl_CanJForRes_2024_supplA.docx) :\n\nParameter calibrations were guided by plausible ranges for ecophysiological parameter values and species traits from the TRY Plant Trait Database (\n\nhttps://​www​.try​-db​.org​/TryWeb​/Home​.php), cross-referenced against region-specific species ecology from the Fire Effects Information System (\n\nhttps://​www​.feis​-crs​.org​/feis/).\n\nFrom the user guide :\n\nThe range of FolN for each species across sites, age, canopy position. This is a great starting point and helps put bounds on acceptable values, but it is important to recognize that productivity is closely related to FolN in PnET, so it is more important that FolN reflect relative productivity among species than matching empirical values. That said, it is usually (but not always) possible to select a value of FolN that is within the range of empirically measured values. If you have empirical values of Amax, use your values of AmaxA and AmaxB (or see Fig. 2 in Aber et al. 1996) to estimate the FolN that produces that Amax value. NOTE: if you plan to implement dynamic FolN (FolNInt and FolNSlope set to values other than default), then be sure to set FolNInt and FolNSlope to the values you will use in your final simulations while calibrating.\n\nSpecies SLWmax helps determine LAI. Thicker leaves (higher SLW) reduce LAI. LAI determines the ability of a cohort to compete for light, so it is important to calibrate so that LAI produces realistic response to light. Again, it is more important to get LAI approximately right than to keep SLWmax within the empirical range. Out-of-range SLWmax values often indicate that FracFol values are incorrect. Note that higher LAI increases within-canopy competition for light and will modestly depress growth even of a single cohort. I have found that LAI values exceeding those given in Table 1 may greatly reduce the amount of light penetrating canopy layers, thus impacting growth, competition and establishment\n\nThere are some published estimates of whole tree biomass through time by species groups to provide some indication of belowground biomass (e.g., Smith et al. 2006). => Que ce sois cette source ou les modèles allometriques trouvés dans R, avoir des estimations du ration above/belowground serais très précieux.\n\n","type":"content","url":"/startingcalibrationtest/getting-the-empirical-data#ranges-of-parameter-values-for-the-calibration","position":35},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process","lvl3":"Competition outcomes between species"},"type":"lvl3","url":"/startingcalibrationtest/getting-the-empirical-data#competition-outcomes-between-species","position":36},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process","lvl3":"Competition outcomes between species"},"content":"\n\nBased on litterature + expert opinion, in different conditions :\n\nBaseline + Good water level\n\nBaseline + Drought\n\nBaseline + Waterlogging\n\nClimate change ++\n\nClimate change +++\n\n","type":"content","url":"/startingcalibrationtest/getting-the-empirical-data#competition-outcomes-between-species","position":37},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process","lvl2":"DRAFTS"},"type":"lvl2","url":"/startingcalibrationtest/getting-the-empirical-data#drafts","position":38},{"hierarchy":{"lvl1":"Getting the empirical data needed fo the calibration process","lvl2":"DRAFTS"},"content":"","type":"content","url":"/startingcalibrationtest/getting-the-empirical-data#drafts","position":39},{"hierarchy":{"lvl1":"Getting the climate and soil data"},"type":"lvl1","url":"/startingcalibrationtest/getting-climate-and-soil-data","position":0},{"hierarchy":{"lvl1":"Getting the climate and soil data"},"content":"Now that we have initial parameters for our species, we need to define the landscape in which the calibration will take place.\n\nTo adapt to the Python functions I’ve made for these Jupyter Notebooks (see \n\nhere), simulations will take place on a single cell.\n\nWhat we need is :\n\nThe climate file (containing all of the climate variables need by PnET)\n\nThe ecoregion file and PnET ecoregion parameters (to decide which ones will be used during the calibration)\n\nInitial communities files (if needed)\n\n","type":"content","url":"/startingcalibrationtest/getting-climate-and-soil-data","position":1},{"hierarchy":{"lvl1":"Getting the climate and soil data","lvl2":"The climate file"},"type":"lvl2","url":"/startingcalibrationtest/getting-climate-and-soil-data#the-climate-file","position":2},{"hierarchy":{"lvl1":"Getting the climate and soil data","lvl2":"The climate file"},"content":"\n\nSee \n\nGustafson and Miranda (2023) for detailed information about what the climate file used in PnET simulations must contain.\n\nGustafson and Miranda (2023) recommends using a constant climate for calibrating (p. 69). Gustafson also recommends using an “ideal” climate at some points, but deciding what is an ideal climate for a given species is a difficult proposition. As we are going to compare the growth curves generated by PnET Succession with the growth curves estimated from data of the National Forest Inventory (NFI) of Canada (see \n\n), the idea will be rather to get long-term monthly averages (as recommanded by \n\nGustafson and Miranda (2023) p. 73) in a region that is pretty representative climate of the study area of interest.\n\nPnET Succession requires 5 climate variables to function :\n\nMaximum Monthly temperature (°C)\n\nMinimum Monthly temperature (°C)\n\nPhotosynthetically Active Radiation (umol/m2/s)\n\nSum of precipitations during the month (mm)\n\nMean monthly atmospheric CO2 concentration (ppm)\n\n","type":"content","url":"/startingcalibrationtest/getting-climate-and-soil-data#the-climate-file","position":3},{"hierarchy":{"lvl1":"Getting the climate and soil data","lvl3":"Climate data location for the calibration","lvl2":"The climate file"},"type":"lvl3","url":"/startingcalibrationtest/getting-climate-and-soil-data#climate-data-location-for-the-calibration","position":4},{"hierarchy":{"lvl1":"Getting the climate and soil data","lvl3":"Climate data location for the calibration","lvl2":"The climate file"},"content":"\n\nSince we’re doing calibration simulation here, we don’t have a particular place where our simulation take place. It’s up to us to choose where the climate data comes from, and there is no a “best” way to do things.\n\nIt’s surely most likely better to use climate conditions that are closer to the average of the conditions we want to simulate in other LANDIS-II simulation rather than to extremes (especially for this first step of calibration). We also want to make sure that the location we use ca be inputted in FVSon.\n\nI propose that we use an area near the border between the boral and temperate forest, and near the center of Ontario. It will be arbitrary.\n\nHere is a map from of the forests of Ontario from the 2016 forest report of Ontario :\n\nThe city of \n\nChapleau seems to be located near the limit between the boreal and temperate forest. I created a simple shapefile polygon around the city that will serve to clip the climate data we want. See the next cell for a map.\n\n# Displays a map where the shapefile that defines the boundaries of the climate data we wanna use is\nimport geopandas as gpd\nimport folium\nfrom folium.features import GeoJsonPopup, GeoJsonTooltip\n\n# Load the shapefile\n# Replace 'path_to_shapefile.shp' with your actual shapefile path\ngdf = gpd.read_file(\"./ReferencesAndData/SpatialBoundaries/ChapleauBoundariesClimate.shp\")\n\n# Check the CRS (Coordinate Reference System) of the shapefile\n# If not in WGS84 (EPSG:4326), reproject it\nif gdf.crs != 'EPSG:4326':\n    gdf = gdf.to_crs('EPSG:4326')\n\n# Create a map centered on the mean of the shapefile bounds\ncenter_lat = gdf.unary_union.centroid.y\ncenter_lon = gdf.unary_union.centroid.x\nm = folium.Map(location=[center_lat, center_lon], zoom_start=10)\n\n# Add the GeoJSON data to the map with some styling\nfolium.GeoJson(\n    gdf,\n    name='Polygons',\n    style_function=lambda x: {\n        'fillColor': '#ebcb8b',\n        'color': '#2e3440',\n        'weight': 1,\n        'fillOpacity': 0.4\n    }\n).add_to(m)\n\n# Add layer control\nfolium.LayerControl().add_to(m)\n\n# Alternatively, you can use this simpler approach which works in newer versions of JupyterLab\ndisplay(m)\n\n","type":"content","url":"/startingcalibrationtest/getting-climate-and-soil-data#climate-data-location-for-the-calibration","position":5},{"hierarchy":{"lvl1":"Getting the climate and soil data","lvl3":"Climate data source for 🌡️ temperature, 🌧️ precipitation and ☀ solar radiation","lvl2":"The climate file"},"type":"lvl3","url":"/startingcalibrationtest/getting-climate-and-soil-data#climate-data-source-for-temperature-precipitation-and-solar-radiation","position":6},{"hierarchy":{"lvl1":"Getting the climate and soil data","lvl3":"Climate data source for 🌡️ temperature, 🌧️ precipitation and ☀ solar radiation","lvl2":"The climate file"},"content":"\n\n","type":"content","url":"/startingcalibrationtest/getting-climate-and-soil-data#climate-data-source-for-temperature-precipitation-and-solar-radiation","position":7},{"hierarchy":{"lvl1":"Getting the climate and soil data","lvl4":"Choosing the right source - going with ESGF data","lvl3":"Climate data source for 🌡️ temperature, 🌧️ precipitation and ☀ solar radiation","lvl2":"The climate file"},"type":"lvl4","url":"/startingcalibrationtest/getting-climate-and-soil-data#choosing-the-right-source-going-with-esgf-data","position":8},{"hierarchy":{"lvl1":"Getting the climate and soil data","lvl4":"Choosing the right source - going with ESGF data","lvl3":"Climate data source for 🌡️ temperature, 🌧️ precipitation and ☀ solar radiation","lvl2":"The climate file"},"content":"There are many potential sources of climate data. I’ve had to juggle with many of them before finding something that fitted our objective here, but also looking more at the long term of the DIVERSE project.\n\nI first wanted to use data from Climate Canada, as they produce outputs of several Global Climate models from CMIP6 at a very small resolution (downscaled), and accessible through the OpenDAP protocol (which allow us to only download the chunks of the data we need). However, their model lacked some of the variables needed for PnET-Succession, especially the solar radiation. This required to use statistical models to predict this variable based on other datasets, which was really not ideal. In addition, their data was monthly, and we were going to require daily data to accomodate some LANDIS-II extensions we were going to use with PnET-Succession further down the road (e.g. BFOLDS Fire).\n\nI then went on to use data from the ESGF (Earth System Grid Federation); first manually from their “\n\nMetagrid” online interface, and then via scripts using their \n\nintake-esgf python package. This allowed us to access outputs from a very large array of GCMs, different variables, etc, at a daily scale, and with the OpenDAP protocol. However, the gridded data here is 100 x 100km of resolution, which is pretty coarse.\n\nI will keep on going with this data from the ESGF in this notebook, so that it is easily re-usable for research teams in other parts of the world (since data from the ESGF covers all of the world). However, for the DIVERSE project, we will most likely use the BioSIM canadian model to downscale climate data, and specially get different climate data for areas with a slope/aspect that can affect local temperature and solar radiation that is received by trees.","type":"content","url":"/startingcalibrationtest/getting-climate-and-soil-data#choosing-the-right-source-going-with-esgf-data","position":9},{"hierarchy":{"lvl1":"Getting the climate and soil data","lvl4":"Climate model that we are using here","lvl3":"Climate data source for 🌡️ temperature, 🌧️ precipitation and ☀ solar radiation","lvl2":"The climate file"},"type":"lvl4","url":"/startingcalibrationtest/getting-climate-and-soil-data#climate-model-that-we-are-using-here","position":10},{"hierarchy":{"lvl1":"Getting the climate and soil data","lvl4":"Climate model that we are using here","lvl3":"Climate data source for 🌡️ temperature, 🌧️ precipitation and ☀ solar radiation","lvl2":"The climate file"},"content":"There are many Global Climate Models (GCMs), and it’s sometimes difficult to choose the right one. Here, I’ve choosen to go with TaiESM1, which was the closest to the median accross models from CMIP6 for the temperature and precipitations for our first tests with the CanDCS-M6 dataset. According to the litterature, TaiESM1 also seems to have a pretty good performance overall when compared in GCM ensembles (see \n\nhere). TaiESM1 also have a lot of data for different SSPs scenarios on the ESGF data repositories, which will be useful for the later steps of the calibration, but also for the DIVERSE project.\n\nWhy we are using a single climate model (instead of several together) here\n\nClimate scientists often recommand to use the results from several climate models (GCMs) at once so as to explore the influence of the variability in results that exists between models, and the incertainty that results from it.\n\nHere, I choose to use the results from a single climate model for several reasons :\n\nThe goal of this calibration is not to explore climate change predictions, but simply to calibrate the growth and dynamic of our tree species. For that, we will use historical data simulated by the model we chose (TaiESM1).\n\nThis calibration is already quite complex, and I’d like to keep it as simple as possible.\n\nUsing several models at once requires one of two things : either using a single climate file whose values are averaged along the values simulated by the different GCMs, which results in very, very “mild” climate conditions (since all extreme variations are not synchronized between models); or to use several climate files and create several PnET-Succession growth curves at each point (which makes things quite complicated).\n\nHowever, once you have calibrated PnET Succession and will use it in your LANDIS-II simulations, it might be good to generate different climate files based on different climate models in order to create “climate replicates” for your LANDIS-II simulation that will allow you to generate an envellope of variability/uncertainty on your LANDIS-II results. To that end, you can use the scripts of this page to generate several climate files for different climate models available in ESGF (be warned that not all models have all of the variables you will need for all of the climate scenario you will want to explore). You can also use the functions from the Xclim python package that will allow you to select a smaller number of models that will represent your climate data properly (see \n\nhere; you will need to create a large ensemble of climate data to use these functions).\n\n","type":"content","url":"/startingcalibrationtest/getting-climate-and-soil-data#climate-model-that-we-are-using-here","position":11},{"hierarchy":{"lvl1":"Getting the climate and soil data","lvl4":"Extraction of 🌡️ temperature, 🌧️ precipitation and ☀ solar radiation data for Ontario, 1950-2100 from ESGF","lvl3":"Climate data source for 🌡️ temperature, 🌧️ precipitation and ☀ solar radiation","lvl2":"The climate file"},"type":"lvl4","url":"/startingcalibrationtest/getting-climate-and-soil-data#extraction-of-temperature-precipitation-and-solar-radiation-data-for-ontario-1950-2100-from-esgf","position":12},{"hierarchy":{"lvl1":"Getting the climate and soil data","lvl4":"Extraction of 🌡️ temperature, 🌧️ precipitation and ☀ solar radiation data for Ontario, 1950-2100 from ESGF","lvl3":"Climate data source for 🌡️ temperature, 🌧️ precipitation and ☀ solar radiation","lvl2":"The climate file"},"content":"\n\nThe goal here is to extract the data for :\n\nThe TaiESM1 model\n\n4 variables (Tmax, Tmin, precip, PAR)\n\nHistorical range (1950-2010)\n\nAt a daily frequency\n\nAt a 100x100km resolution, but only inside our polygon (see above), and only for a single cell that is closest to the polygon centroid in the end (since we will only simulate one cell at a time during the calibration, we don’t need more than one climate stream for one ecoregion)\n\nWe extract the raw variables first for each, who each have particular names for CMIP6 data like this one :\n\ntasmax = maximum daily temperature in kelvin\n\ntasmin = minimum daily temperature in kelvin\n\nprc = daily precipitations in kg m-2 s-1\n\nrsds = average daily downwelling shortwave solar radiation in W/m2\n\nTo be certain of these units, we can check the metadata/attributes of the objects manipulated during this script, or on the ESGF metagrid.\n\nOther variables are available at a daily frequency that can be used for other LANDIS-II extensions if you need them. For example, the variables necessary for BFOLDS fire :\n\nhur, the relative humidty in percentage\n\nua, the eastward wind speed in m/s\n\nva, the northward wind speed in m/s\n\nFor other variables codes, see sites such as \n\nthis one.\n\n# Here, we get the URLs to download the data we need through the OpenDAP protocol,\n# by looking at the datasets available in the ESGF nodes\n# WARNING : if you have a VPN on, this might result in error as nodes might refuse the connection.\n# Simply disable the VPN and try again.\n\nfrom functionsForCalibration import *\nfrom intake_esgf import ESGFCatalog\nimport intake_esgf\n\n# Initialize catalog\ncat = ESGFCatalog()\n\n# Search for the variables we need for TaiESM1, historical data, and daily frequency\n# See cell above for infos about the variables\ncat.search(\n    experiment_id=\"historical\",\n    source_id=\"TaiESM1\",\n    frequency=\"day\",\n    # variable_id=[\"rsds\", \"prc\", \"tasmin\", \"tasmax\", \"hur\", \"ua\", \"va\"], # Variables for BFOLDS added\n    variable_id=[\"rsds\", \"prc\", \"tasmin\", \"tasmax\"]\n)\n\n# Making a dictionnary with the path to then access the data in xarray with OpenDAP,\n# we can see that the function only return one single .nc file per dataset, for a single\n# time period. The time period for each variable seems to be pretty random.\npaths = cat.to_path_dict(prefer_streaming=True)\n# print(paths)\n\n# Now, we're going to loop around the OpenDAP paths and extract the data for the years we want and in\n# the polygon we defined earlier, thanks to a custom function.\n# WARNING : you might get errors if there are paths in the \"paths\" object that we created just before that\n# are not OpenDAP URL paths. It might happen since the to_path_dict function of intake_esgf is still experimental.\n# If this happens, you need to clean the dictionnary to only have the OpenDAP URLs you need.\nfrom functionsForCalibration import *\n\n# We initialize the dictionnary that are going to fill\n# A key = one variable. The value will be a dataframe filled with the data from the variable.\ndictOfDataFrames = dict()\n\nfor variable in paths.keys():\n    # Since the data is often fragmented accross several .nc files that correspond to different ranges of year\n    # for the data, we need to first initialize a panda dataframe, and then add rows to it.\n    # That's what we do here.\n    variableInitialized = False\n    for path in paths[variable]:\n        if not variableInitialized:\n            dictOfDataFrames[variable] = GetDataFromESGFdataset(path,\n                                            yearStart = 1950,\n                                            yearStop = 2010,\n                                            pathOfShapefileForSubsetting = \"./ReferencesAndData/SpatialBoundaries/ChapleauBoundariesClimate.shp\",\n                                            nameOfVariable = variable,\n                                            verbose = False,\n                                            enableWarnings = False)\n            if not dictOfDataFrames[variable].empty:\n                variableInitialized = True\n        else:\n            additionalData = GetDataFromESGFdataset(path,\n                                            yearStart = 1950,\n                                            yearStop = 2010,\n                                            pathOfShapefileForSubsetting = \"./ReferencesAndData/SpatialBoundaries/ChapleauBoundariesClimate.shp\",\n                                            nameOfVariable = variable,\n                                            verbose = False,\n                                            enableWarnings = False)\n            # The complex thing in pd.concat is used to deal with cases when GetDataFromESGFdataset returned an empty dataframe,\n            # which happens when the .nc file didn't corresponded to the years we wanted.\n            dictOfDataFrames[variable] = pd.concat([dictOfDataFrames[variable], additionalData if not additionalData.empty else None], ignore_index=True)\n        # We sort the values by day, because they might be out of order.\n        dictOfDataFrames[variable] = dictOfDataFrames[variable].sort_values(['year', 'month', 'day'])\n        # print(dictOfDataFrames[variable])\n\n# Now that we have the raw data accross several 100x100km grid cells for all variables necessary for PnET,\n# we simply have to transform the measures if needed (e.g. PAR into umol/m2.s for the right radiation range instead of rsds which is W/m2)\n# and then put everything in the right format for the LANDIS-II v8 climate library, and finally output things as .csv\n# for latter use\nimport copy\n\n##################################\n# Restricting data to only one grid cell\n# (since we will only simulate on cell in our monocultures)\n##################################\n\n# We get the unique coordinates in the dataframe\nuniqueCoordinatesInDataFrames = extract_unique_coordinates(dictOfDataFrames[\"rsds\"])\n# Then, we choose the cell that is closest to the centroid of our chapleau region we've been using\nbestCoordinatePair = find_closest_coordinate_to_polygon_center(\"./ReferencesAndData/SpatialBoundaries/ChapleauBoundariesClimate.shp\",\n                                                                uniqueCoordinatesInDataFrames)\n# Then, we remove all references to other coordinate pairs\n# Extract the latitude and longitude from the target coordinate\ntarget_lat, target_lon = bestCoordinatePair\ndictOfDataFramesSubset = copy.deepcopy(dictOfDataFrames)\nfor variable in dictOfDataFramesSubset.keys():\n    # Create a mask for rows matching the target coordinate\n    mask = (dictOfDataFramesSubset[variable]['lat'] == target_lat) & (dictOfDataFramesSubset[variable]['lon'] == target_lon)\n    dictOfDataFramesSubset[variable] = dictOfDataFramesSubset[variable][mask]\n\n# Now, we put all dataframes together in a single dataframe\nmergedDataframe = pd.merge(dictOfDataFramesSubset[\"rsds\"], dictOfDataFramesSubset[\"prc\"], on = [\"lat\", \"lon\", \"year\", \"month\", \"day\"], how='left')\nmergedDataframe = pd.merge(mergedDataframe, dictOfDataFramesSubset[\"tasmax\"], on = [\"lat\", \"lon\", \"year\", \"month\", \"day\"], how='left')\nmergedDataframe = pd.merge(mergedDataframe, dictOfDataFramesSubset[\"tasmin\"], on = [\"lat\", \"lon\", \"year\", \"month\", \"day\"], how='left')\n\n# WARNING : prc values are often 0. It's because it's daily precipitation data, it's normal !\n# print(mergedDataframe)\n\n##################################\n# Transforming units (important !)\n# And also variable names, to fit what is needed for the\n# LANDIS-II v8 climate library\n##################################\n\n# tasmin and tasmax are in kelvin. We put then in celcius.\nmergedDataframe['Tmin'] = mergedDataframe['tasmin'].apply(kelvin_to_celsius)\nmergedDataframe['Tmax'] = mergedDataframe['tasmax'].apply(kelvin_to_celsius)\n\n# Precipitations are in kg m-2 s-1 (see ESGF metagrid metadata for validation : https://esgf.nci.org.au/search?project=CMIP6&activeFacets=%7B%22nominal_resolution%22%3A%22100+km%22%2C%22frequency%22%3A%22day%22%2C%22experiment_id%22%3A%22historical%22%2C%22source_id%22%3A%22TaiESM1%22%2C%22variable_id%22%3A%22prc%22%7D)\n# Transforming precipitations from their original unit - kg m-2 s-1 - into cm per day\nmergedDataframe['precip'] = mergedDataframe['prc']*8640 # Going from seconds to days (86400 seconds in a day) and from mm (kg m-2) into cm (/10)\n\n# For solar radiation : we first need to transform it from daily average to daytime average.\n# Daily is on 24h (includes night); daily is average from sunrise to sunset.\n# The data pulled from ESGF is daily; it has been validated to me in an email exchange by \n# Gary Strand, data maintener of the dataset i used at first : http://doi.org/10.22033/ESGF/CMIP6.10071\n# We do that through a function that will calculate daytime hours based on the day of the year and the latitude/longitude.\nmergedDataframe[\"rsds_daytimeAverage\"] = [daylight_hour_average(row[\"rsds\"], row[\"lat\"], row[\"lon\"], row[\"year\"], row[\"month\"], row[\"day\"]) for index, row in mergedDataframe.iterrows()]\n\n# Transforming downwelling shortwave radiation from W/m2 to umol.m2/s-1\n# Based on the PnET User Guide's instructions\n# Downwelling shortwave radiation (rsds which we have here) is often refered as global solar radiation.\n# See https://library.wmo.int/viewer/68695/?offset=3#page=298&viewer=picture&o=search&n=0&q=shortwave . But other references exist.\n# So, Downwelling shortave radiation is for wavelengths of 0.2–4.0 μm; PAR is for 0.4–0.7 μm.\n# As such, to convert our Downwelling Shortwave Radiation in W/m2 to PAR in umol.m2/s-1, \n# we must multiply it by 2.02 as indicated in the user guide of PnET Succession.\nmergedDataframe['PAR'] = mergedDataframe['rsds']*2.02 # Going from seconds to days (86400 seconds in a day)\n\n# We remove the old columns\nmergedDataframe.drop('tasmin', axis=1, inplace=True)\nmergedDataframe.drop('tasmax', axis=1, inplace=True)\nmergedDataframe.drop('prc', axis=1, inplace=True)\nmergedDataframe.drop('rsds', axis=1, inplace=True)\nmergedDataframe.drop('rsds_daytimeAverage', axis=1, inplace=True)\n\n# We print the result\n# print(mergedDataframe)\n\n##################################\n# Giving the dataframe the right columns\n# for the LANDIS-II v8 climate library\n##################################\n\n# Create a unique identifier for each lat/lon pair\nmergedDataframe['lat_lon'] = mergedDataframe['lat'].astype(str) + '_' + mergedDataframe['lon'].astype(str)\n\n# Melt the dataframe to convert variables into rows\nmelted_df = pd.melt(\n    mergedDataframe, \n    id_vars=['year', 'month', 'day', 'lat_lon'],\n    value_vars=['Tmin', 'Tmax', \"PAR\", \"precip\"],\n    var_name='Variable',\n    value_name='value'\n)\n\n# Pivot the table to get lat_lon as columns (which can then be used as ecoregions)\nresult_df = melted_df.pivot_table(\n    index=['year', 'month', 'day', 'Variable'],\n    columns='lat_lon',\n    values='value'\n).reset_index()\n\n# Convert the column index from MultiIndex to regular Index\nresult_df.columns.name = None\nresult_df = result_df.sort_values(by=['Variable', 'year', 'month', 'day'])\n\n# We replace the name of the column that has the lat_lon pairing into an \n# ecoregion name (the one used in our PnET one cell scenario, eco1)\nresult_df = result_df.rename(columns={result_df.columns[-1]: 'eco1'})\n# print(result_df)\n\n# We print as .csv\nresult_df.to_csv(\"./ReferencesAndData/Climate Data/dataFrameClimate_historicalDaily.csv\", sep=',', index=False, encoding='utf-8')\n\n# We finish by averaging the values (which is recommanded by the PnET User to use in the first steps of the calibration,\n# to have a very mild and stable climate with no extremes.\n# As a result, we will still have a climate stream with daily data from 1950 to 2010,\n# but every january 1st data for a given variable will the same, and will be the average of all january 1st in the original\n# non-averaged data, etc.\nfrom functionsForCalibration import *\n\ndataFrameClimate_historicalDaily = pd.read_csv(\"./ReferencesAndData/Climate Data/dataFrameClimate_historicalDaily.csv\")\n\ndataFrameClimate_historicalAveraged = transform_to_historical_averages_vectorized(dataFrameClimate_historicalDaily)\n\n# print(dataFrameClimate_historicalDaily)\n# print(dataFrameClimate_historicalAveraged)\n\ndataFrameClimate_historicalAveraged.to_csv(\"./ReferencesAndData/Climate Data/dataFrameClimate_historicalAveraged.csv\", sep=',', index=False, encoding='utf-8')\n\n","type":"content","url":"/startingcalibrationtest/getting-climate-and-soil-data#extraction-of-temperature-precipitation-and-solar-radiation-data-for-ontario-1950-2100-from-esgf","position":13},{"hierarchy":{"lvl1":"Getting the climate and soil data","lvl3":"Climate source for ☁️ CO2 concentrations","lvl2":"The climate file"},"type":"lvl3","url":"/startingcalibrationtest/getting-climate-and-soil-data#climate-source-for-co2-concentrations","position":14},{"hierarchy":{"lvl1":"Getting the climate and soil data","lvl3":"Climate source for ☁️ CO2 concentrations","lvl2":"The climate file"},"content":"\n\nPnET-Succession needs CO2 concentrations in the air to simulation vegetation dynamic. However, it doesn’t seem to be a variable that is generated by the GCMs of the CMIP6. It looks like it’s because CO2 concentration are often assumed homogeneous on earth since it’s a well-mixed gas, because it’s an intrant/restriction to the models rather than an output, etc.\n\nStill, there are local variations around the atmosphere in CO2 concentrations (see \n\nhere). The differences are small, and it seems like global values can be used (see \n\nhere). But I’m choosing here to try to get more nuanced data.\n\nData from \n\nhttps://​www​.nature​.com​/articles​/s41597​-022​-01196​-7​#Sec5 seems very promising : available at \n\nhttps://​zenodo​.org​/records​/5021361, not too big, allows for local variations in CO2 concentration. Would need to script the download and treatment of the files here. Timestep is monthly, but we can downscale it to daily and still at least have some monthly variation. Goes to 2150, so perfect for our uses.\n\nJustification for using the dataset :\n\nWe know that this CO2 dataset does not come from the same GCM that generated our climate data, and there could be variability between the variability of climate variables in one dataset versus the climate variables in the models that generated these CO2 estimates at each given timestep.\n\nHowever, We thought it better to use this dataset to approximate CO2 spatial and temporal variations in our simulations rather than using latitudinal or global averages.\n\n# First, we download the CO2 data from https://zenodo.org/records/5021361 \n\nfrom functionsForCalibration import *\nimport pandas as pd\nimport urllib.request\nimport subprocess\nimport os\n\n# We use the zenodo_get library to download files from Zenodo very fast; other methods tend to be slow.\n# See https://github.com/dvolgyes/zenodo_get . It is installed in the Docker image.\n# WARNING : will take around 1.5GB of space for the data from 1950 to 2150 for a full climate scenario.\n\n# We download the file with historical data\nos.system(\"cd ReferencesAndData && zenodo_get 5021361 -g CO2_1deg_month_1850-2013.nc\")\n\n# We can also download data for future conditions, like this :\n# os.system(\"cd ReferencesAndData && zenodo_get 5021361 -g CO2_SSP126_2015_2150.nc\")\n\nfrom functionsForCalibration import *\n\nhistorical_ds = xr.open_dataset(\"./ReferencesAndData/CO2_1deg_month_1850-2013.nc\")\n# future_ds = xr.open_dataset(\"./ReferencesAndData/CO2_SSP126_2015_2150.nc\")\n\n# Shapefile to select where we take our values; if several climate cells are in the shapefile,\n# then the CO2 values in all cells will be averaged (see function process_co2_data)\nshapefile = \"./ReferencesAndData/SpatialBoundaries/ChapleauBoundariesClimate.shp\"\n\n# We load the dataframe\n# We prepare the dataframe in a format that matches the older function I made\n# When I was using monthly data and LANDIS-II v7.\n# We load the file created previously\ndf_climate = pd.read_csv(\"./ReferencesAndData/Climate Data/dataFrameClimate_historicalDaily.csv\")\n# Convert to year month day to string\ndf_climate['date_string'] = (df_climate['year'].astype(str) + '-' + \n                     df_climate['month'].astype(str) + '-' + \n                     df_climate['day'].astype(str))\n# Get unique dates\nuniqueDates = df_climate['date_string'].unique()\n# Create the new dataframe\ndfToFill = pd.DataFrame(columns=[\"year\", \"month\", \"day\", \"Variable\"])\n# Put the dates in\ndfToFill[\"date_string\"] = uniqueDates\n# extract the dates correctly\ndfToFill['year'] = dfToFill[\"date_string\"].str.split('-').str[0].astype(int)\ndfToFill['month'] = dfToFill[\"date_string\"].str.split('-').str[1].astype(int)\ndfToFill['day'] = dfToFill[\"date_string\"].str.split('-').str[2].astype(int)\n# Add variable name\ndfToFill[\"Variable\"] = [\"CO2\"] * len(dfToFill)\n# Remove the date_string column\ndfToFill.drop('date_string', axis=1, inplace=True)\ndf_climate.drop('date_string', axis=1, inplace=True)\n# Now, the dataframe is ready to be filled with CO2 values with the old function !\n# print(dfToFill)\n\ndfToFill = process_co2_data(historical_ds, shapefile, dfToFill)\n\n# Display the updated dataframe\nprint(dfToFill.head())\nprint(dfToFill.tail())\n\n# Finally, we add this CO2 data to the previous data, and re-average it if needed\n\n# First, we have to rename the CO2 column in the dataframe we just filled so that it corresponds to an ecoregion now\n# (this is due to the difference in the climate library formats with LANDIS-II v8 and the old functions I was using before switching)\n# The column name CO2_Concentration is created by the function process_co2_data\ndfToFill = dfToFill.rename(columns={'CO2_Concentration': 'eco1'})\n\n# We concatenate the dataframes\ndf_climate = pd.concat([df_climate, dfToFill], ignore_index=True)\n\n# We check if needed\nprint(df_climate)\n\n# We average\ndataFrameClimate_historicalAveraged = transform_to_historical_averages_vectorized(df_climate)\n# We save everything\ndataFrameClimate_historicalAveraged.to_csv(\"./ReferencesAndData/Climate Data/dataFrameClimate_historicalAveraged.csv\", sep=',', index=False, encoding='utf-8')\n\n# Now that everything is done, we can remove the CO2 files downloaded\nos.remove(\"./ReferencesAndData/CO2_1deg_month_1850-2013.nc\")\n# os.remove(\"./ReferencesAndData/CO2_SSP126_2015_2150.nc\")\n\n","type":"content","url":"/startingcalibrationtest/getting-climate-and-soil-data#climate-source-for-co2-concentrations","position":15},{"hierarchy":{"lvl1":"Getting the climate and soil data","lvl2":"Soils"},"type":"lvl2","url":"/startingcalibrationtest/getting-climate-and-soil-data#soils","position":16},{"hierarchy":{"lvl1":"Getting the climate and soil data","lvl2":"Soils"},"content":"\n\nGustafon recommands SILO (Silty Loam/Silt Loam) soil from the default PnET Succession SaxtonAndRawls file (C:\\Program Files\\LANDIS-II-v7\\extensions\\Defaults\\SaxtonAndRawlsParameters.txt) as a soil that retains water well. This is because the first calibration step should use an “ideal soil” where water is well-retained so that lack of water (or watterlogging) does not influence growth at this calibration step.\n\nWe can use the SILO soil type easily by modifying the SoilType of eco1 in the PnET One Cell Scenario that we will use (see SimulationFiles/PnETGitHub_OneCellSim_v8/). So, nothing more to do here.\n\n","type":"content","url":"/startingcalibrationtest/getting-climate-and-soil-data#soils","position":17},{"hierarchy":{"lvl1":"Getting the climate and soil data","lvl2":"CLUES FOR FUTURE DATA"},"type":"lvl2","url":"/startingcalibrationtest/getting-climate-and-soil-data#clues-for-future-data","position":18},{"hierarchy":{"lvl1":"Getting the climate and soil data","lvl2":"CLUES FOR FUTURE DATA"},"content":"Alex Chubaty might have scripts to generate initial data in BC and Alberta, and even other provinces ?\n\nCaren Dymonc for initial data in BC ?\n\nYan Boulanger : BioSIM climate data for small scale/downscaled climate data for PnET + BFOLDS ? Needed so that we can have PnET Climate input that change according to slope and topography in particular. Will need to create many smaller ecoregions that are combo of soils + climate “zones” in the area + classes of slopes/aspect. BioSIM might help in generating those things.","type":"content","url":"/startingcalibrationtest/getting-climate-and-soil-data#clues-for-future-data","position":19},{"hierarchy":{"lvl1":"Phase 1 🌳 : Calibration of species in optimal conditions (monoculture + mesic soil + average and unchanging climate)"},"type":"lvl1","url":"/startingcalibrationtest/monoculture-ideal-conditions","position":0},{"hierarchy":{"lvl1":"Phase 1 🌳 : Calibration of species in optimal conditions (monoculture + mesic soil + average and unchanging climate)"},"content":"","type":"content","url":"/startingcalibrationtest/monoculture-ideal-conditions","position":1},{"hierarchy":{"lvl1":"Phase 1 🌳 : Calibration of species in optimal conditions (monoculture + mesic soil + average and unchanging climate)","lvl2":"Goal of this first calibration step"},"type":"lvl2","url":"/startingcalibrationtest/monoculture-ideal-conditions#goal-of-this-first-calibration-step","position":2},{"hierarchy":{"lvl1":"Phase 1 🌳 : Calibration of species in optimal conditions (monoculture + mesic soil + average and unchanging climate)","lvl2":"Goal of this first calibration step"},"content":"The goal of this first calibration phase, as recommanded by \n\nGustafson and Miranda (2023), is to calibrate the growth and mortality of a given tree species in “ideal” conditions. This means simulating a monoculture (no light competition with another species) on a mesic soil that retains water correctly (no drought, but no watterlogging either) and with a very mild, average historical climate (no extremes, especially in precipitations and temperatures).\n\nBy doing so, we can isolate the effect of the many parameters and factor that influence tree growth, and focus on the few parameters that should (on a theoritical level) influence tree growth and mortality in ideal conditions :\n\nFracFol\n\nFolN\n\nTOWood\n\nTORoot\n\nSLWmax\n\nFracFol (pioneers species tend to have relatively high values)\n\nFolN (pioneers species tend to have relatively high values)\n\nFracBelowG\n\nTo make sure your species sees the conditions of the simulation as really ideal (so that you can, again, isolate the effect from other parameters), you can even put PsnTOpt for your species to a value matching the climate inputs during the three warmest months of the growing season. This will make it so that your species sees the temperatures in your climate file as optimal. This is not absolutly necessary.\n\nHere, you will be trying to match a bit above the growth curves or estimates produced in your empirical data. This is become we’re simulating ideal conditions, including a mild climate and a good soil (SILO). But in reality data, species do not grow in ideal conditions.\n\nTip\n\nOverall, as recommanded by the user guide, calibration is best done by modifying only FolN (to control relative productivity), FracFol, FrActWd and SLWmax (to control gross foliage amount and LAI, which determines the ability to access light) as much as possible. But if you produce growth curve that are too far from your empirical data, you can always change the other parameters too.\n\nImportant\n\nBe certain to have solid initial estimates for all other parameters that will not be calibrated during this phase, so as to avoid as much as possible a counfounding effect that could result from problematic or uncorrect values for these parameters.\n\nImportant\n\nBe certain to have good weather data. Because biomass accumulation is ultimately limited by water, your precipitation inputs should not be much greater than is typical for your study area, especially for the results of your simulation to match your empirical data better.\n\nDanger\n\nAs recommanded by \n\nGustafson and Miranda (2023), keep in mind that calibrating growth to strictly match empirical growth curves may cause competition behavior in the model that is unrealistic. As such, you may want to favor a shape that is somewhat consistent with other species that have the same growth strategy (e.g., pioneers v. shade-tolerants). This will be important for the next phase (calibrating competition outcomes).\n\nAlso keep in mind that the model equations may produce a curve shape that is somewhat different than your empirical curves (likely generated under specific conditions) and forcing the model to exactly match empirical curves may reduce its validity in landscape simulations. In particular, you should try to match the biomass accumulation where growth begins to plateau and produce relative rates of initial growth that reflect each species’ growth strategy (i.e., continuum of pioneer v. shade-tolerant). (\n\nGustafson and Miranda (2023)).\n\n","type":"content","url":"/startingcalibrationtest/monoculture-ideal-conditions#goal-of-this-first-calibration-step","position":3},{"hierarchy":{"lvl1":"Phase 1 🌳 : Calibration of species in optimal conditions (monoculture + mesic soil + average and unchanging climate)","lvl2":"How to do this step"},"type":"lvl2","url":"/startingcalibrationtest/monoculture-ideal-conditions#how-to-do-this-step","position":4},{"hierarchy":{"lvl1":"Phase 1 🌳 : Calibration of species in optimal conditions (monoculture + mesic soil + average and unchanging climate)","lvl2":"How to do this step"},"content":"Important\n\nEverything here comes from my interpretation of the calibration tips in \n\nGustafson and Miranda (2023). These are quite complex, so there might be oversimplifications/misunderstanding from my part. I’ll try to rectify if I detect some problems.","type":"content","url":"/startingcalibrationtest/monoculture-ideal-conditions#how-to-do-this-step","position":5},{"hierarchy":{"lvl1":"Phase 1 🌳 : Calibration of species in optimal conditions (monoculture + mesic soil + average and unchanging climate)","lvl3":"Sub-phase 1 : Calibrating the peak","lvl2":"How to do this step"},"type":"lvl3","url":"/startingcalibrationtest/monoculture-ideal-conditions#sub-phase-1-calibrating-the-peak","position":6},{"hierarchy":{"lvl1":"Phase 1 🌳 : Calibration of species in optimal conditions (monoculture + mesic soil + average and unchanging climate)","lvl3":"Sub-phase 1 : Calibrating the peak","lvl2":"How to do this step"},"content":"Focusing on :\n\nFracFol\n\nFolN\n\nTOWood\n\nTORoot\n\nSLWmax\n\nFrActWd\n\nImportant\n\nDuring this phase, keep the value of MaxFracFol similar to FracFol. MaxFracFol will then be changed in the next phase.\n\nFirst, adjust TOWood/TORoot for large adjustments of the growth curve peak. The objective is to match a peak that is a bit above empirical data (around 5-10%) to account for the fact that we are simulating in ideal conditions, while empirical data is not in ideal conditions.\n\nThen, tune LAI towards realistic values via FracFol and TOWood/TORoot, and then SLWmax for fine tuning. The idea is to keep SLWmax within empirical limits. LAI will most likely not vary much after this. LAI is determined by two factors: the amount of foliage and the thickness of leaves (SLWmax). Thus, simultaneous tuning of foliage (FracFol, FrActWd) and leaf thickness (SLWmax) is required.\n\nIf LAI empirical values are not avaibles, here are targets recommanded by \n\nGustafson and Miranda (2023) :\n\nShade Tolerance Category\n\nTolerant\n\nSomewhat-tolerant\n\nIntermediate\n\nSomewhat intolerant\n\nIntolerant\n\nMaximum LAI Target\n\n<5.0\n\n<4.5\n\n<3.5\n\n<2.8\n\n<2.5\n\nIn any case, try to avoid LAI above 5.0.\n\nThe LAI should remain relatively stable after its peak, meaning that you should monitor LAI. LAI will however decline when scenscence begins (fAge drops approximately below 0.6). Stability of the LAI is often dealt with the FrActWd parameter.\n\nAfter taking care of the LAI, FolN can then be used to modestly adjust the height of the entire growth curve for fine tuning. However, FolN should remain withing empirical limits as much as possible.\n\nFor long-lived tree species that tend to get heart rot, large dead branches or lots of self-thinning mortality (e.g. red maple), raising TOWood can reduce the height of the growth curve with a correct reason to do so.\n\nIf the amount of dead wood produced is too much, TOWood can be reduced with a concomitant increase in TORoot. Note that the biomass lost from wood becomes woody debris but biomass lost from roots just vaporizes (i.e., it is not tracked).\n\nImportant\n\nAs per \n\nGustafson and Miranda (2023) : If you have a curve that abnormally flattens after about year 50 after modifying some parameter other that MaintResp, it is likely because of lack of water, often caused by excess foliage that consumes water. Try reducing foliage (with FracFol and/or FracActWd) and increasing FolN to get a curve with a more gradually tapering shape. You’ll need to ensure that LAI stays within bounds for the species.","type":"content","url":"/startingcalibrationtest/monoculture-ideal-conditions#sub-phase-1-calibrating-the-peak","position":7},{"hierarchy":{"lvl1":"Phase 1 🌳 : Calibration of species in optimal conditions (monoculture + mesic soil + average and unchanging climate)","lvl2":"Sub-phase 2 : Calibrating the beginning of the growth curve"},"type":"lvl2","url":"/startingcalibrationtest/monoculture-ideal-conditions#sub-phase-2-calibrating-the-beginning-of-the-growth-curve","position":8},{"hierarchy":{"lvl1":"Phase 1 🌳 : Calibration of species in optimal conditions (monoculture + mesic soil + average and unchanging climate)","lvl2":"Sub-phase 2 : Calibrating the beginning of the growth curve"},"content":"Focusing on :\n\nMaxFracFol\n\nFracFolShape\n\nThe objective is to match the speed at which biomass accumulates towards the peak. This is crucial for competition further down the road, as species that can grow very fast will be more competitive.\n\nTwo elements can be used as targets here : your empirical data, and the targets of Wood biomass at age 14 (in g/m2) recommanded by \n\nGustafson and Miranda (2023) :\n\nShade Tolerance Category\n\nTolerant\n\nSomewhat-tolerant\n\nIntermediate\n\nSomewhat intolerant\n\nIntolerant\n\nWood biomass at age 14 (g/m2)\n\n235\n\n360\n\n440\n\n560\n\n670\n\nTo match these targets, it is recommanded that you act on these two parameters :\n\nMaxFracFol allow you to add foliage when a cohort is newly established when increasing it, which will speed up the growth curve towards its peak. One can put MaxFracFol to a value inferior to FracFol in the cases where a reduction in early growth is need to match the wood biomass target values of above. I’ts better to tweak MaxFracFol at this point rather than before sub-phase 1 to avoid back-and-forths. If even high values of MaxFracFol cannot give an adequate early growth, TOFol might need to be slightly lowered (happens for evergreen species with TOFol often around 0.5)\n\nIncreasing FracFolShape will control the range of light levels over which an increase of foliage is produced. Its effect is more complex : increasing it will limit the response of LAI to high light conditions, while lowering it spreads the response over a greater range of light condition.\n\nBoth MaxFracFol and FracFolShape are modifiers that adjust FracFol (the amount of foliage maintened each year by the cohort depending on the woody biomass of the cohort) depending on the level of light present. \n\nGustafson and Miranda (2023) thus recommand one approach to try to find the values of MaxFracFol and FracFolShape that will produce the desired value in FracFol given the light stress (fRad) at the beginning of the growing season and at a later year (near the biomass peak). However, I fail to understand how one would have “desired” values of FracFol. Still, FracFol is likely one of the most sensitive parameters of PnET-Succession (see \n\nhere), so it’s better to plan things ahead if possible.\n\nRemember that LAI will be capped via the calibration you did before in the step before; here, we are calibrating how quickly the gain of LAI is done at the beginning of a cohort’s life, which influences the beginning of its growth curve.","type":"content","url":"/startingcalibrationtest/monoculture-ideal-conditions#sub-phase-2-calibrating-the-beginning-of-the-growth-curve","position":9},{"hierarchy":{"lvl1":"Phase 1 🌳 : Calibration of species in optimal conditions (monoculture + mesic soil + average and unchanging climate)","lvl2":"Sub-phase 3 (optional) : mid-age depression of the growth curve for short-lived species"},"type":"lvl2","url":"/startingcalibrationtest/monoculture-ideal-conditions#sub-phase-3-optional-mid-age-depression-of-the-growth-curve-for-short-lived-species","position":10},{"hierarchy":{"lvl1":"Phase 1 🌳 : Calibration of species in optimal conditions (monoculture + mesic soil + average and unchanging climate)","lvl2":"Sub-phase 3 (optional) : mid-age depression of the growth curve for short-lived species"},"content":"Focusing on :\n\nPsnAgeRed\n\nMaintResp\n\nSome short-lived tree species tend to growth fast at first, but then see their growth slowing down. As such, one might want to reduce growth at their mid-age so that their growth peak is reached more slowly. This can be done through PsnAgeRed, which limits photosynthesis as a function of age. But be careful about the impact of PsnAgeRed on the age of cohort mortality due to senescence (see next section).\n\nOne can also act on MaintResp to represent the fact that short-lived species tend to grow fast but have a higher maintenance respiration rate which will depress their growth after a while. Raising MaintResp will therefore depress the curve. But this will make your species more prone to competition mortality, making it more difficult for these species to co-exist together.","type":"content","url":"/startingcalibrationtest/monoculture-ideal-conditions#sub-phase-3-optional-mid-age-depression-of-the-growth-curve-for-short-lived-species","position":11},{"hierarchy":{"lvl1":"Phase 1 🌳 : Calibration of species in optimal conditions (monoculture + mesic soil + average and unchanging climate)","lvl2":"Sub-phase 4 : Senescence"},"type":"lvl2","url":"/startingcalibrationtest/monoculture-ideal-conditions#sub-phase-4-senescence","position":12},{"hierarchy":{"lvl1":"Phase 1 🌳 : Calibration of species in optimal conditions (monoculture + mesic soil + average and unchanging climate)","lvl2":"Sub-phase 4 : Senescence"},"content":"Focusing on :\n\nPsnAgeRed\n\nLongevity (LANDIS-II Core species parameter; is outside of PnET Succession)\n\nThe last phase of the curve to calibrate is the senescence phase, where the tree cohort grows older. At it grows, its maintenance cost (in carbon) will grow; but its photosynthesis will be reduced through a reduction factor, and will completly stop as the cohort reaches the “longevity” core species parameter for its species. This is how tree cohort die of old age in PnET-Succession : by becoming progressively unable to sustain their maintenance costs through photosynthesis.\n\nAs such, there are two targets that are being calibrated here : 1) the age where photosynthesis will start declining because of age, and 2) the age where the photosynthesis reduction factor will become so low that the cohort will die by lack of ressources. These two targets are shown on the following figure : This is a comment; I had to find a way to resize the image in Jupyter lab.\nThat makes for a snippet a code that is more complex than I'd want. See https://github.com/jupyter/notebook/issues/1885. \n\n \n\n\n\nThe first target (initiation of decline) is defined in PnET with the parameter PsnAgeRed, which controls when the photosynthesis reduction factor fAge starts declining, and how fast.\n\nThe second target (age of cohort death) is influenced by the start of the decline (first target), but also  with the “longevity” parameter given in the “Core” species parameter file (e.g. species.txt in /SimulationFiles/\\PnETGitHub_OneCellSim_v8). When the age of the cohort reaches the “longevity” parammeter, the photosynthesis reduction factor fAge will reach 0 (no more photosynthesis takes place). Of course, the cohort will most likely die before it reaches 0 because its photosynthesis will have been too low for too much time, which will have depleted its ressources before fAge reaches 0. As such, you should try to input a “longevity” parameter value in the species parameter file that will kill your cohort at the age you want (e.g. that correspond to empirical data) in interaction with your first target. Note again that the cohort will very likely die before the longevity parameter.\n\nAs to where you can get estimates of these two targets (initation of decline and age of cohort death) for your species, this gets a bit complex. The decreasing part of the empirical biomass growth data that you might have used so far often contain the effect of other factors that affect tree morality including human harvesting, natural disturbance and diseases, and competition with other trees. However, as we are simulating tree growth in ideal conditions, we are trying to isolate the effect of senescence from these other factors. As such, the empirical biomass data you have will most likely not be a good target to match (as you will over-estimate senescence if you try to match them).\n\nAs such, there are several options to get the initiation of decline and age of cohort death. Here are some of them :\n\nFor the age of cohort death, you could try to obtain individual tree age data from sample plots of forest inventory, and find the 99th percentile (to avoid outlayers) of tree age for your species. This should give you a good estimate of the maximum age observed for this species, which should be as close as can be to something like a “age of cohort death in ideal growth conditions” as we’re trying to find here.\n\nBe careful of the reported values in the litterature for the longevity of the species. These are often expert opinion, and might represent what experts often see in the field, which is influenced by other causes of mortality (competition, climate, disturbances, etc.) that you don’t want to take into account here.\n\nFor the initiation of decline, you can :\n\nUse reported values of longevity in the litterature, which are often the result of rule-of-thumb or expert opinion as noted above, but which can be interpreted as the initiation of decline; for the age of cohort death, you could rather use empirical values of maximum tree age (see above). This is the methodology used by Brian Sturtevant’s team.\n\nTake a percentile of the tree ages from the same tree age data you used for the age of cohort death (see above); for example, 75th or 80th percentile.\n\nUse a rule-of-thumb and set the initiation of decline to half or 3/4 of the age of cohort death.\n\nUse the default value of PsnAgeRed in PnET (5), or the same value for every species. \n\nGustafson and Miranda (2023) actually recommand against calibrating PsnAgeRed for every species, on the basis that it will make it harder to understand and calibrate the competition between species (see next step).\n\nWarning\n\nIf you have depressed the growth curve using PsnAgeRed in the previous sub-phase 3, then you should’t change it at this step, and should rather focus in changing the value of longevity in the core species parameter file so that the age of cohort death is correct.\n\nIn this notebook, we will use the 99th percentile of empirical tree age data in Canada from sample plot data to set the age of cohort death for our species, and we will use the default value of PsnAgeRed (5) to set the initiation of decline.\n\n","type":"content","url":"/startingcalibrationtest/monoculture-ideal-conditions#sub-phase-4-senescence","position":13},{"hierarchy":{"lvl1":"Phase 1 🌳 : Calibration of species in optimal conditions (monoculture + mesic soil + average and unchanging climate)","lvl2":"Source of empirical data for the Calibration"},"type":"lvl2","url":"/startingcalibrationtest/monoculture-ideal-conditions#source-of-empirical-data-for-the-calibration","position":14},{"hierarchy":{"lvl1":"Phase 1 🌳 : Calibration of species in optimal conditions (monoculture + mesic soil + average and unchanging climate)","lvl2":"Source of empirical data for the Calibration"},"content":"\n\n","type":"content","url":"/startingcalibrationtest/monoculture-ideal-conditions#source-of-empirical-data-for-the-calibration","position":15},{"hierarchy":{"lvl1":"Phase 1 🌳 : Calibration of species in optimal conditions (monoculture + mesic soil + average and unchanging climate)","lvl2":"Calibrating Abies balsamea in monoculture"},"type":"lvl2","url":"/startingcalibrationtest/monoculture-ideal-conditions#calibrating-abies-balsamea-in-monoculture","position":16},{"hierarchy":{"lvl1":"Phase 1 🌳 : Calibration of species in optimal conditions (monoculture + mesic soil + average and unchanging climate)","lvl2":"Calibrating Abies balsamea in monoculture"},"content":"\n\n# Will need to edit the PnET One Cell files to use the climate file created in 4. through the LANDIS-II climate library.\n# Also need to edit eco1 in ecoregion parameters to give it SILO\n\n# Create the scatter plot\n# Get the current color cycle\nfrom itertools import cycle\ncolours = cycle(['#a3be8c', '#5e81ac', '#bf616a', '#d08770', '#ebcb8b', '#2e3440', '#8fbcbb'])\nplt.figure(figsize=(10, 8))\nfor province in dictOfResults_0:\n    plt.scatter(dictOfResults_0[province][0], dictOfResults_0[province][1], alpha=0.6, s=8, c=next(colours), label = province)\nplt.xlabel('Forest Age (years)')\nplt.ylabel('Abies Balsamea Biomass (g/m2)')\nplt.title(f'Relationship between Forest Age and Abies Balsamea Biomass - all cells with some Abies Balsamea biomass')\nplt.grid(True, linestyle='--', alpha=0.7)\nplt.legend()\n\n# Add a trend line\n# if len(age_sample) > 1:\n#     z = np.polyfit(age_sample, abies_biomass_sample, 1)\n#     p = np.poly1d(z)\n#     age_range = np.linspace(age_sample.min(), age_sample.max(), 100)\n#     plt.plot(age_range, p(age_range), \"r--\", alpha=0.8, linewidth=2)\n#     plt.text(0.05, 0.95, f'y = {z[0]:.4f}x + {z[1]:.4f}', \n#              transform=plt.gca().transAxes, fontsize=12, \n#              bbox=dict(boxstyle=\"round,pad=0.3\", facecolor=\"white\", alpha=0.8))\n\nplt.tight_layout()\nplt.savefig('age_vs_abies_biomass.png', dpi=300)\nplt.show()\n\n# Create the scatter plot\n# Get the current color cycle\nfrom itertools import cycle\ncolours = cycle(['#a3be8c', '#5e81ac', '#bf616a', '#d08770', '#ebcb8b', '#2e3440', '#8fbcbb'])\nplt.figure(figsize=(10, 8))\nfor province in dictOfResults_50:\n    plt.scatter(dictOfResults_50[province][0], dictOfResults_50[province][1], alpha=0.6, s=8, c=next(colours), label = province)\nplt.xlabel('Forest Age (years)')\nplt.ylabel('Abies Balsamea Biomass (g/m2)')\nplt.title(f'Relationship between Forest Age and Abies Balsamea Biomass - cells with more than 50% Abies Balsamea biomass')\nplt.grid(True, linestyle='--', alpha=0.7)\nplt.legend()\n\n# Add a trend line\n# if len(age_sample) > 1:\n#     z = np.polyfit(age_sample, abies_biomass_sample, 1)\n#     p = np.poly1d(z)\n#     age_range = np.linspace(age_sample.min(), age_sample.max(), 100)\n#     plt.plot(age_range, p(age_range), \"r--\", alpha=0.8, linewidth=2)\n#     plt.text(0.05, 0.95, f'y = {z[0]:.4f}x + {z[1]:.4f}', \n#              transform=plt.gca().transAxes, fontsize=12, \n#              bbox=dict(boxstyle=\"round,pad=0.3\", facecolor=\"white\", alpha=0.8))\n\nplt.tight_layout()\nplt.savefig('age_vs_abies_biomass.png', dpi=300)\nplt.show()\n\n","type":"content","url":"/startingcalibrationtest/monoculture-ideal-conditions#calibrating-abies-balsamea-in-monoculture","position":17},{"hierarchy":{"lvl1":"Phase 1 🌳 : Calibration of species in optimal conditions (monoculture + mesic soil + average and unchanging climate)","lvl2":"TODO"},"type":"lvl2","url":"/startingcalibrationtest/monoculture-ideal-conditions#todo","position":18},{"hierarchy":{"lvl1":"Phase 1 🌳 : Calibration of species in optimal conditions (monoculture + mesic soil + average and unchanging climate)","lvl2":"TODO"},"content":"Plot the superposition of the LANDIS-II PnET-Succession growth curve with the points + growth curves estimated in 5.\n\nPlot root biomass from pNET Succession to have an idea of how it’s evolving\n\nPlot LAI too if possible","type":"content","url":"/startingcalibrationtest/monoculture-ideal-conditions#todo","position":19},{"hierarchy":{"lvl1":"Calibration test"},"type":"lvl1","url":"/startingcalibrationtest/intro-calibrationtest","position":0},{"hierarchy":{"lvl1":"Calibration test"},"content":"Using the first version of the \n\ncalibration plan described in the larger documentation concerning the DIVERSE project, I will make a first attempt here to calibrate a couple of species in a region of Quebec already used for simulations in the DIVERSE project based on the calibration tips of Eric Gustafson hilighted in \n\nGustafson and Miranda (2023).\n\n","type":"content","url":"/startingcalibrationtest/intro-calibrationtest","position":1},{"hierarchy":{"lvl1":"Calibration test","lvl2":"🎯 Objective"},"type":"lvl2","url":"/startingcalibrationtest/intro-calibrationtest#id-objective","position":2},{"hierarchy":{"lvl1":"Calibration test","lvl2":"🎯 Objective"},"content":"To calibrate 3 species whose parameters are already proposed in the \n\nPnET Succession v5.1 User Guide, but which are found in Quebec :\n\nAbies balsamea, the Balsam Fir\n\nAcer rubrum, the Red Maple\n\nPicea mariana, the Black Spruce.\n\nRequirements (if you want to run these Jupyter notebooks yourself)\n\nTo run the Jupyter Notebooks used for this calibration on your own computer, you should run them through the docker image that can be built from the repository (see \n\nREADME.md).","type":"content","url":"/startingcalibrationtest/intro-calibrationtest#id-objective","position":3},{"hierarchy":{"lvl1":"👋 Welcome !"},"type":"lvl1","url":"/","position":0},{"hierarchy":{"lvl1":"👋 Welcome !"},"content":"This \n\nJupyter book was created by \n\nClement Hardy for the \n\nresearch theme 4 of the \n\nDIVERSE project.","type":"content","url":"/","position":1},{"hierarchy":{"lvl1":"👋 Welcome !","lvl2":"🎯 Goal of this documentation"},"type":"lvl2","url":"/#id-goal-of-this-documentation","position":2},{"hierarchy":{"lvl1":"👋 Welcome !","lvl2":"🎯 Goal of this documentation"},"content":"The objective here is to calibrate the \n\nPnET Succession extension for the \n\nLANDIS-II model, in the context of the different landscape that will be simulated for the \n\nDIVERSE project.\n\nPnET-Succession is one of the most complex extensions of LANDIS-II, based on the PnET familly of eco-physiological models. To be certain that the vegetation dynamics that it simulates will be realistic, we need to calibrate it carefully.\n\nThe \n\nPnET succession User Guide contains a lengthy section of calibration tips by \n\nEric Gustafson that I will use as a guide for this calibration process.\n\nMaking the calibration of PnET easier for everyone\n\nOne of the main goals of this documentation is to translate the calibration tips of Eric Gustafson into a replicable and entirely documented procedure. As such, any research team should find here a calibration of PnET Succession from A to Z that can be replicated and reused freely.","type":"content","url":"/#id-goal-of-this-documentation","position":3},{"hierarchy":{"lvl1":"👋 Welcome !","lvl2":"🪜 Steps of the calibration"},"type":"lvl2","url":"/#id-steps-of-the-calibration","position":4},{"hierarchy":{"lvl1":"👋 Welcome !","lvl2":"🪜 Steps of the calibration"},"content":"There are many ways to calibrate a model like PnET-Succession. It can be difficult to choose which one to use. Here, I propose an approach based my own understanding of the \n\ncalibration tips of Eric Gustafson.\n\nThis approach is a multi-step procedure that focuses on calibrating certain parameters one after the others, in simulated conditions of increasing complexity. By doing this, we can isolate as much as possible the counfounding effect of different parameters and focus on one type of output/outcome at a time while keeping other parameters fixed.\n\nThe different phases are :\n\nPhase 1 🌳 : Calibration of species in optimal conditions (monoculture + mesic soil + average and unchanging climate).\n\nSub-phase 1 : Calibration of the peak of the growth curve\n\nSub-phase 2 : Calibration of the initiation of the growth curve\n\nSub-phase 3 : Calibration of the senescence (end of the growth curve)\n\nPhase 2 🌤️ : Calibration of the competition for light (mixed stands + mesic soil + average and unchanging climate) via a matrix of expected light competition outcomes between pairs of species. A calibration might also be done based on the expected outcomes of known combination of species more complex than a pair (e.g. species assemblages typical of the region) to see if PnET can replicate the cohabitation of these species together.\n\nPhase 3 🌧️ : Calibration of the absorption of water (monoculture stands + average and unchanging temperature + conditions of waterlogging or drought) via a matrix of expected outcomes for each species in conditions of drought or waterlogging (i.e. regular growth, decrease in growth, strong decrease in growth, death).\n\nPhase 4 🌡️ : Calibration of the effect of the temperature (monoculture stands + changing temperatures + mesic soil and average precipitations) via a matrix of expected outcomes for each species in conditions of increasing temperatures (i.e. regular growth, decrease in growth, strong decrease in growth, death). Landscape-scale simulation might also be used to see if expected processes (e.g. increase in deciduous species, decrease in coniferous species) is observed at this larger scale.\n\nPhase 5 🌱 : Calibration of landscape-scale establishment (one species at a time in the landscape to simulate + average temperatures and precipitations) by monitoring the number of cohorts produced at each time step via dispersion/reproduction of the species, and comparing to expected values.\n\nPhase 1 will most likely be the most time-consuming and important, as this is where we will calibrate some of the most important and sensitive parameters of PnET-Succession. The calibration in the successive steps should be minimal if the instructions of step 1 have been followed, and if the initial parameters you are using are good at representing the differences between species.","type":"content","url":"/#id-steps-of-the-calibration","position":5},{"hierarchy":{"lvl1":"👋 Welcome !","lvl2":"📖 Format of this documentation"},"type":"lvl2","url":"/#id-format-of-this-documentation","position":6},{"hierarchy":{"lvl1":"👋 Welcome !","lvl2":"📖 Format of this documentation"},"content":"This documentation is a Jupyter Book, composed of several files (markdown files and Jupyter notebooks) that you can find in \n\nthe repository that contains the book.\n\nAll of the actions used to calibrate PnET Succession as described in this book are thus executed in Python, with both the code and its outputs being visibile to you as you go through the book.\n\nThis means that you can replicate the whole process easily on your own computer. You can also download the files and scripts used throughout this book to use them for your own research, which should help you win some time.\n\n➡️ 📖 If you simply want to inform yourself as to the calibration process, just keep reading !\n\n➡️ 💻 If you want to run the code used for this calibration process on your own computer (for example, to calibrate new species for your own study area), read the instructions of \n\nthe readme of the repository. They will help you deploy a Docker image on your computer that will contains the entire environment (including LANDIS-II) used for this calibration within minutes.\n\n📖 Happy reading !","type":"content","url":"/#id-format-of-this-documentation","position":7},{"hierarchy":{"lvl1":"👋 Welcome !","lvl2":"✒️ Table of contents"},"type":"lvl2","url":"/#id-table-of-contents","position":8},{"hierarchy":{"lvl1":"👋 Welcome !","lvl2":"✒️ Table of contents"},"content":"Calibration of PnET Succession for the DIVERSE project\n\nCalibration test\n\nSome important notions before we start\n\nLoading functions and packages\n\nMaking a test simulation to get used to the functions\n\nInitial species parameters\n\nGetting the empirical data needed fo the calibration process\n\nGetting the climate and soil data\n\nPhase 1 🌳 : Calibration of species in optimal conditions (monoculture + mesic soil + average and unchanging climate)","type":"content","url":"/#id-table-of-contents","position":9}]}